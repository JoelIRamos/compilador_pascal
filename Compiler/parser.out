Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET
Rule 2     Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET
Rule 3     variable -> VAR variables COLON datatype SEMICOLON
Rule 4     variable -> variable variable
Rule 5     variables -> ID
Rule 6     variables -> variables COMMA variables
Rule 7     datatype -> INT
Rule 8     datatype -> REAL
Rule 9     datatype -> BOOL
Rule 10    datatype -> STR
Rule 11    block -> BEGIN SEMICOLON statement END SEMICOLON
Rule 12    statement -> writestatement
Rule 13    statement -> assignstatement
Rule 14    statement -> ifstatement
Rule 15    statement -> whileloop
Rule 16    statement -> forloop
Rule 17    statement -> statement statement
Rule 18    writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
Rule 19    assignstatement -> ID ASSIGN expression point_ae SEMICOLON
Rule 20    assignstatement -> ID PLUSPLUS SEMICOLON
Rule 21    assignstatement -> ID MINUSMINUS SEMICOLON
Rule 22    ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
Rule 23    elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET
Rule 24    elsestatement -> <empty>
Rule 25    point_if_then_ini -> <empty>
Rule 26    point_else_ini -> <empty>
Rule 27    whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
Rule 28    point_while -> <empty>
Rule 29    point_first_exp -> <empty>
Rule 30    forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
Rule 31    assignstatement_for -> ID ASSIGN expression point_ae
Rule 32    point_for_pre_exp -> <empty>
Rule 33    point_for_end_exp -> point_ae
Rule 34    increment_decrement -> ID PLUSPLUS
Rule 35    increment_decrement -> ID MINUSMINUS
Rule 36    expression -> logical_expression
Rule 37    expression -> relational_expression
Rule 38    expression -> arithmetic_expression
Rule 39    expression -> expression_id
Rule 40    expression -> STRING
Rule 41    logical_expression -> relational_expression
Rule 42    logical_expression -> relational_expression point_ae AND relational_expression point_ae
Rule 43    logical_expression -> relational_expression point_ae OR relational_expression point_ae
Rule 44    logical_expression -> logical_expression point_ae AND logical_expression point_ae
Rule 45    logical_expression -> logical_expression point_ae OR logical_expression point_ae
Rule 46    logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
Rule 47    relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae
Rule 48    relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae
Rule 49    relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
Rule 50    relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
Rule 51    relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
Rule 52    relational_expression -> STRING EQUAL STRING
Rule 53    relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
Rule 54    relational_expression -> BOOLEAN
Rule 55    arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae
Rule 56    arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae
Rule 57    arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae
Rule 58    arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
Rule 59    arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
Rule 60    arithmetic_expression -> expression_id
Rule 61    arithmetic_expression -> INTEGER
Rule 62    arithmetic_expression -> NUMBER
Rule 63    expression_id -> ID
Rule 64    empty -> <empty>
Rule 65    point_ae -> <empty>

Terminals, with rules where they appear

AND                  : 42 44
ASSIGN               : 19 31
BEGIN                : 11
BOOL                 : 9
BOOLEAN              : 54
COLON                : 3
COMMA                : 6
DIVIDE               : 58
DO                   : 27
ELSE                 : 23
END                  : 11
EQUAL                : 51 52
FOR                  : 30
GREATER              : 47
GREATEREQUAL         : 49
ID                   : 1 2 5 19 20 21 31 34 35 63
IF                   : 22
INT                  : 7
INTEGER              : 61
LEFTBRACKET          : 1 2 22 23 27 30
LEFTPARENTHESIS      : 18 22 27 30 46 53 59
LESSER               : 48
LESSEREQUAL          : 50
MINUS                : 56
MINUSMINUS           : 21 35
NUMBER               : 62
OR                   : 43 45
PLUS                 : 55
PLUSPLUS             : 20 34
PROGRAM              : 1 2
REAL                 : 8
RIGHTBRACKET         : 1 2 22 23 27 30
RIGHTPARENTHESIS     : 18 22 27 30 46 53 59
SEMICOLON            : 3 11 11 18 19 20 21 30 30
STR                  : 10
STRING               : 40 52 52
THEN                 : 22
TIMES                : 57
VAR                  : 3
WHILE                : 27
WRITE                : 18
error                : 

Nonterminals, with rules where they appear

Program              : 0
arithmetic_expression : 38 47 47 48 48 49 49 50 50 51 51 55 55 56 56 57 57 58 58 59
assignstatement      : 13
assignstatement_for  : 30
block                : 1 2
datatype             : 3
elsestatement        : 22
empty                : 
expression           : 18 19 22 27 30 31
expression_id        : 39 60
forloop              : 16
ifstatement          : 14
increment_decrement  : 30
logical_expression   : 36 44 44 45 45 46
point_ae             : 18 19 31 33 42 42 43 43 44 44 45 45 47 47 48 48 49 49 50 50 51 51 55 55 56 56 57 57 58 58
point_else_ini       : 23
point_first_exp      : 27
point_for_end_exp    : 30
point_for_pre_exp    : 30
point_if_then_ini    : 22
point_while          : 27
relational_expression : 37 41 42 42 43 43 53
statement            : 11 17 17 22 23 27 30
variable             : 1 4 4
variables            : 3 6 6
whileloop            : 15
writestatement       : 12

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> . PROGRAM ID LEFTBRACKET block RIGHTBRACKET

    PROGRAM         shift and go to state 2

    Program                        shift and go to state 1

state 1

    (0) S' -> Program .



state 2

    (1) Program -> PROGRAM . ID LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> PROGRAM . ID LEFTBRACKET block RIGHTBRACKET

    ID              shift and go to state 3


state 3

    (1) Program -> PROGRAM ID . LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> PROGRAM ID . LEFTBRACKET block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 4


state 4

    (1) Program -> PROGRAM ID LEFTBRACKET . variable block RIGHTBRACKET
    (2) Program -> PROGRAM ID LEFTBRACKET . block RIGHTBRACKET
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable
    (11) block -> . BEGIN SEMICOLON statement END SEMICOLON

    VAR             shift and go to state 7
    BEGIN           shift and go to state 8

    variable                       shift and go to state 5
    block                          shift and go to state 6

state 5

    (1) Program -> PROGRAM ID LEFTBRACKET variable . block RIGHTBRACKET
    (4) variable -> variable . variable
    (11) block -> . BEGIN SEMICOLON statement END SEMICOLON
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable

    BEGIN           shift and go to state 8
    VAR             shift and go to state 7

    variable                       shift and go to state 9
    block                          shift and go to state 10

state 6

    (2) Program -> PROGRAM ID LEFTBRACKET block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 11


state 7

    (3) variable -> VAR . variables COLON datatype SEMICOLON
    (5) variables -> . ID
    (6) variables -> . variables COMMA variables

    ID              shift and go to state 13

    variables                      shift and go to state 12

state 8

    (11) block -> BEGIN . SEMICOLON statement END SEMICOLON

    SEMICOLON       shift and go to state 14


state 9

    (4) variable -> variable variable .
    (4) variable -> variable . variable
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable

  ! shift/reduce conflict for VAR resolved as shift
    BEGIN           reduce using rule 4 (variable -> variable variable .)
    VAR             shift and go to state 7

  ! VAR             [ reduce using rule 4 (variable -> variable variable .) ]

    variable                       shift and go to state 9

state 10

    (1) Program -> PROGRAM ID LEFTBRACKET variable block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 15


state 11

    (2) Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET .

    $end            reduce using rule 2 (Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET .)


state 12

    (3) variable -> VAR variables . COLON datatype SEMICOLON
    (6) variables -> variables . COMMA variables

    COLON           shift and go to state 16
    COMMA           shift and go to state 17


state 13

    (5) variables -> ID .

    COLON           reduce using rule 5 (variables -> ID .)
    COMMA           reduce using rule 5 (variables -> ID .)


state 14

    (11) block -> BEGIN SEMICOLON . statement END SEMICOLON
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 18
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 15

    (1) Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET .

    $end            reduce using rule 1 (Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET .)


state 16

    (3) variable -> VAR variables COLON . datatype SEMICOLON
    (7) datatype -> . INT
    (8) datatype -> . REAL
    (9) datatype -> . BOOL
    (10) datatype -> . STR

    INT             shift and go to state 30
    REAL            shift and go to state 31
    BOOL            shift and go to state 32
    STR             shift and go to state 33

    datatype                       shift and go to state 29

state 17

    (6) variables -> variables COMMA . variables
    (5) variables -> . ID
    (6) variables -> . variables COMMA variables

    ID              shift and go to state 13

    variables                      shift and go to state 34

state 18

    (11) block -> BEGIN SEMICOLON statement . END SEMICOLON
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    END             shift and go to state 36
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 19

    (12) statement -> writestatement .

    END             reduce using rule 12 (statement -> writestatement .)
    WRITE           reduce using rule 12 (statement -> writestatement .)
    ID              reduce using rule 12 (statement -> writestatement .)
    IF              reduce using rule 12 (statement -> writestatement .)
    WHILE           reduce using rule 12 (statement -> writestatement .)
    FOR             reduce using rule 12 (statement -> writestatement .)
    RIGHTBRACKET    reduce using rule 12 (statement -> writestatement .)


state 20

    (13) statement -> assignstatement .

    END             reduce using rule 13 (statement -> assignstatement .)
    WRITE           reduce using rule 13 (statement -> assignstatement .)
    ID              reduce using rule 13 (statement -> assignstatement .)
    IF              reduce using rule 13 (statement -> assignstatement .)
    WHILE           reduce using rule 13 (statement -> assignstatement .)
    FOR             reduce using rule 13 (statement -> assignstatement .)
    RIGHTBRACKET    reduce using rule 13 (statement -> assignstatement .)


state 21

    (14) statement -> ifstatement .

    END             reduce using rule 14 (statement -> ifstatement .)
    WRITE           reduce using rule 14 (statement -> ifstatement .)
    ID              reduce using rule 14 (statement -> ifstatement .)
    IF              reduce using rule 14 (statement -> ifstatement .)
    WHILE           reduce using rule 14 (statement -> ifstatement .)
    FOR             reduce using rule 14 (statement -> ifstatement .)
    RIGHTBRACKET    reduce using rule 14 (statement -> ifstatement .)


state 22

    (15) statement -> whileloop .

    END             reduce using rule 15 (statement -> whileloop .)
    WRITE           reduce using rule 15 (statement -> whileloop .)
    ID              reduce using rule 15 (statement -> whileloop .)
    IF              reduce using rule 15 (statement -> whileloop .)
    WHILE           reduce using rule 15 (statement -> whileloop .)
    FOR             reduce using rule 15 (statement -> whileloop .)
    RIGHTBRACKET    reduce using rule 15 (statement -> whileloop .)


state 23

    (16) statement -> forloop .

    END             reduce using rule 16 (statement -> forloop .)
    WRITE           reduce using rule 16 (statement -> forloop .)
    ID              reduce using rule 16 (statement -> forloop .)
    IF              reduce using rule 16 (statement -> forloop .)
    WHILE           reduce using rule 16 (statement -> forloop .)
    FOR             reduce using rule 16 (statement -> forloop .)
    RIGHTBRACKET    reduce using rule 16 (statement -> forloop .)


state 24

    (18) writestatement -> WRITE . LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 37


state 25

    (19) assignstatement -> ID . ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> ID . PLUSPLUS SEMICOLON
    (21) assignstatement -> ID . MINUSMINUS SEMICOLON

    ASSIGN          shift and go to state 38
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40


state 26

    (22) ifstatement -> IF . LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement

    LEFTPARENTHESIS shift and go to state 41


state 27

    (27) whileloop -> WHILE . LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET

    LEFTPARENTHESIS shift and go to state 42


state 28

    (30) forloop -> FOR . LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    LEFTPARENTHESIS shift and go to state 43


state 29

    (3) variable -> VAR variables COLON datatype . SEMICOLON

    SEMICOLON       shift and go to state 44


state 30

    (7) datatype -> INT .

    SEMICOLON       reduce using rule 7 (datatype -> INT .)


state 31

    (8) datatype -> REAL .

    SEMICOLON       reduce using rule 8 (datatype -> REAL .)


state 32

    (9) datatype -> BOOL .

    SEMICOLON       reduce using rule 9 (datatype -> BOOL .)


state 33

    (10) datatype -> STR .

    SEMICOLON       reduce using rule 10 (datatype -> STR .)


state 34

    (6) variables -> variables COMMA variables .
    (6) variables -> variables . COMMA variables

  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 6 (variables -> variables COMMA variables .)
    COMMA           shift and go to state 17

  ! COMMA           [ reduce using rule 6 (variables -> variables COMMA variables .) ]


state 35

    (17) statement -> statement statement .
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    END             reduce using rule 17 (statement -> statement statement .)
    RIGHTBRACKET    reduce using rule 17 (statement -> statement statement .)
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

  ! WRITE           [ reduce using rule 17 (statement -> statement statement .) ]
  ! ID              [ reduce using rule 17 (statement -> statement statement .) ]
  ! IF              [ reduce using rule 17 (statement -> statement statement .) ]
  ! WHILE           [ reduce using rule 17 (statement -> statement statement .) ]
  ! FOR             [ reduce using rule 17 (statement -> statement statement .) ]

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 36

    (11) block -> BEGIN SEMICOLON statement END . SEMICOLON

    SEMICOLON       shift and go to state 45


state 37

    (18) writestatement -> WRITE LEFTPARENTHESIS . expression point_ae RIGHTPARENTHESIS SEMICOLON
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 47
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 38

    (19) assignstatement -> ID ASSIGN . expression point_ae SEMICOLON
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 57
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 39

    (20) assignstatement -> ID PLUSPLUS . SEMICOLON

    SEMICOLON       shift and go to state 58


state 40

    (21) assignstatement -> ID MINUSMINUS . SEMICOLON

    SEMICOLON       shift and go to state 59


state 41

    (22) ifstatement -> IF LEFTPARENTHESIS . expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 60
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 42

    (27) whileloop -> WHILE LEFTPARENTHESIS . point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (29) point_first_exp -> .

    STRING          reduce using rule 29 (point_first_exp -> .)
    LEFTPARENTHESIS reduce using rule 29 (point_first_exp -> .)
    BOOLEAN         reduce using rule 29 (point_first_exp -> .)
    INTEGER         reduce using rule 29 (point_first_exp -> .)
    NUMBER          reduce using rule 29 (point_first_exp -> .)
    ID              reduce using rule 29 (point_first_exp -> .)

    point_first_exp                shift and go to state 61

state 43

    (30) forloop -> FOR LEFTPARENTHESIS . assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (31) assignstatement_for -> . ID ASSIGN expression point_ae

    ID              shift and go to state 63

    assignstatement_for            shift and go to state 62

state 44

    (3) variable -> VAR variables COLON datatype SEMICOLON .

    BEGIN           reduce using rule 3 (variable -> VAR variables COLON datatype SEMICOLON .)
    VAR             reduce using rule 3 (variable -> VAR variables COLON datatype SEMICOLON .)


state 45

    (11) block -> BEGIN SEMICOLON statement END SEMICOLON .

    RIGHTBRACKET    reduce using rule 11 (block -> BEGIN SEMICOLON statement END SEMICOLON .)


state 46

    (46) logical_expression -> LEFTPARENTHESIS . logical_expression RIGHTPARENTHESIS
    (53) relational_expression -> LEFTPARENTHESIS . relational_expression RIGHTPARENTHESIS
    (59) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 67
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 64
    relational_expression          shift and go to state 65
    arithmetic_expression          shift and go to state 66
    expression_id                  shift and go to state 68

state 47

    (18) writestatement -> WRITE LEFTPARENTHESIS expression . point_ae RIGHTPARENTHESIS SEMICOLON
    (65) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 69

state 48

    (36) expression -> logical_expression .
    (44) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (45) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (65) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 36 (expression -> logical_expression .)
    SEMICOLON       reduce using rule 36 (expression -> logical_expression .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 70

state 49

    (37) expression -> relational_expression .
    (41) logical_expression -> relational_expression .
    (42) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (43) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (65) point_ae -> .

  ! reduce/reduce conflict for RIGHTPARENTHESIS resolved using rule 37 (expression -> relational_expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 37 (expression -> relational_expression .)
  ! reduce/reduce conflict for AND resolved using rule 41 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 41 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS reduce using rule 37 (expression -> relational_expression .)
    SEMICOLON       reduce using rule 37 (expression -> relational_expression .)
    AND             reduce using rule 41 (logical_expression -> relational_expression .)
    OR              reduce using rule 41 (logical_expression -> relational_expression .)

  ! RIGHTPARENTHESIS [ reduce using rule 41 (logical_expression -> relational_expression .) ]
  ! SEMICOLON       [ reduce using rule 41 (logical_expression -> relational_expression .) ]
  ! AND             [ reduce using rule 65 (point_ae -> .) ]
  ! OR              [ reduce using rule 65 (point_ae -> .) ]

    point_ae                       shift and go to state 71

state 50

    (38) expression -> arithmetic_expression .
    (47) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 38 (expression -> arithmetic_expression .)
    SEMICOLON       reduce using rule 38 (expression -> arithmetic_expression .)
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 72

state 51

    (39) expression -> expression_id .
    (60) arithmetic_expression -> expression_id .

  ! reduce/reduce conflict for RIGHTPARENTHESIS resolved using rule 39 (expression -> expression_id .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 39 (expression -> expression_id .)
    RIGHTPARENTHESIS reduce using rule 39 (expression -> expression_id .)
    SEMICOLON       reduce using rule 39 (expression -> expression_id .)
    GREATER         reduce using rule 60 (arithmetic_expression -> expression_id .)
    LESSER          reduce using rule 60 (arithmetic_expression -> expression_id .)
    GREATEREQUAL    reduce using rule 60 (arithmetic_expression -> expression_id .)
    LESSEREQUAL     reduce using rule 60 (arithmetic_expression -> expression_id .)
    EQUAL           reduce using rule 60 (arithmetic_expression -> expression_id .)
    PLUS            reduce using rule 60 (arithmetic_expression -> expression_id .)
    MINUS           reduce using rule 60 (arithmetic_expression -> expression_id .)
    TIMES           reduce using rule 60 (arithmetic_expression -> expression_id .)
    DIVIDE          reduce using rule 60 (arithmetic_expression -> expression_id .)

  ! RIGHTPARENTHESIS [ reduce using rule 60 (arithmetic_expression -> expression_id .) ]
  ! SEMICOLON       [ reduce using rule 60 (arithmetic_expression -> expression_id .) ]


state 52

    (40) expression -> STRING .
    (52) relational_expression -> STRING . EQUAL STRING

    RIGHTPARENTHESIS reduce using rule 40 (expression -> STRING .)
    SEMICOLON       reduce using rule 40 (expression -> STRING .)
    EQUAL           shift and go to state 73


state 53

    (54) relational_expression -> BOOLEAN .

    AND             reduce using rule 54 (relational_expression -> BOOLEAN .)
    OR              reduce using rule 54 (relational_expression -> BOOLEAN .)
    RIGHTPARENTHESIS reduce using rule 54 (relational_expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 54 (relational_expression -> BOOLEAN .)


state 54

    (61) arithmetic_expression -> INTEGER .

    GREATER         reduce using rule 61 (arithmetic_expression -> INTEGER .)
    LESSER          reduce using rule 61 (arithmetic_expression -> INTEGER .)
    GREATEREQUAL    reduce using rule 61 (arithmetic_expression -> INTEGER .)
    LESSEREQUAL     reduce using rule 61 (arithmetic_expression -> INTEGER .)
    EQUAL           reduce using rule 61 (arithmetic_expression -> INTEGER .)
    PLUS            reduce using rule 61 (arithmetic_expression -> INTEGER .)
    MINUS           reduce using rule 61 (arithmetic_expression -> INTEGER .)
    TIMES           reduce using rule 61 (arithmetic_expression -> INTEGER .)
    DIVIDE          reduce using rule 61 (arithmetic_expression -> INTEGER .)
    RIGHTPARENTHESIS reduce using rule 61 (arithmetic_expression -> INTEGER .)
    SEMICOLON       reduce using rule 61 (arithmetic_expression -> INTEGER .)
    AND             reduce using rule 61 (arithmetic_expression -> INTEGER .)
    OR              reduce using rule 61 (arithmetic_expression -> INTEGER .)


state 55

    (62) arithmetic_expression -> NUMBER .

    GREATER         reduce using rule 62 (arithmetic_expression -> NUMBER .)
    LESSER          reduce using rule 62 (arithmetic_expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 62 (arithmetic_expression -> NUMBER .)
    LESSEREQUAL     reduce using rule 62 (arithmetic_expression -> NUMBER .)
    EQUAL           reduce using rule 62 (arithmetic_expression -> NUMBER .)
    PLUS            reduce using rule 62 (arithmetic_expression -> NUMBER .)
    MINUS           reduce using rule 62 (arithmetic_expression -> NUMBER .)
    TIMES           reduce using rule 62 (arithmetic_expression -> NUMBER .)
    DIVIDE          reduce using rule 62 (arithmetic_expression -> NUMBER .)
    RIGHTPARENTHESIS reduce using rule 62 (arithmetic_expression -> NUMBER .)
    SEMICOLON       reduce using rule 62 (arithmetic_expression -> NUMBER .)
    AND             reduce using rule 62 (arithmetic_expression -> NUMBER .)
    OR              reduce using rule 62 (arithmetic_expression -> NUMBER .)


state 56

    (63) expression_id -> ID .

    RIGHTPARENTHESIS reduce using rule 63 (expression_id -> ID .)
    GREATER         reduce using rule 63 (expression_id -> ID .)
    LESSER          reduce using rule 63 (expression_id -> ID .)
    GREATEREQUAL    reduce using rule 63 (expression_id -> ID .)
    LESSEREQUAL     reduce using rule 63 (expression_id -> ID .)
    EQUAL           reduce using rule 63 (expression_id -> ID .)
    PLUS            reduce using rule 63 (expression_id -> ID .)
    MINUS           reduce using rule 63 (expression_id -> ID .)
    TIMES           reduce using rule 63 (expression_id -> ID .)
    DIVIDE          reduce using rule 63 (expression_id -> ID .)
    SEMICOLON       reduce using rule 63 (expression_id -> ID .)
    AND             reduce using rule 63 (expression_id -> ID .)
    OR              reduce using rule 63 (expression_id -> ID .)


state 57

    (19) assignstatement -> ID ASSIGN expression . point_ae SEMICOLON
    (65) point_ae -> .

    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 74

state 58

    (20) assignstatement -> ID PLUSPLUS SEMICOLON .

    END             reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    WRITE           reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    ID              reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    IF              reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    WHILE           reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    FOR             reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)


state 59

    (21) assignstatement -> ID MINUSMINUS SEMICOLON .

    END             reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    WRITE           reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    ID              reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    IF              reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    WHILE           reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    FOR             reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)


state 60

    (22) ifstatement -> IF LEFTPARENTHESIS expression . RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement

    RIGHTPARENTHESIS shift and go to state 75


state 61

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp . expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 76
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 62

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for . SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    SEMICOLON       shift and go to state 77


state 63

    (31) assignstatement_for -> ID . ASSIGN expression point_ae

    ASSIGN          shift and go to state 78


state 64

    (46) logical_expression -> LEFTPARENTHESIS logical_expression . RIGHTPARENTHESIS
    (44) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (45) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (65) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 79
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 70

state 65

    (53) relational_expression -> LEFTPARENTHESIS relational_expression . RIGHTPARENTHESIS
    (41) logical_expression -> relational_expression .
    (42) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (43) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (65) point_ae -> .

  ! shift/reduce conflict for RIGHTPARENTHESIS resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 41 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 41 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS shift and go to state 80
    AND             reduce using rule 41 (logical_expression -> relational_expression .)
    OR              reduce using rule 41 (logical_expression -> relational_expression .)

  ! RIGHTPARENTHESIS [ reduce using rule 41 (logical_expression -> relational_expression .) ]
  ! AND             [ reduce using rule 65 (point_ae -> .) ]
  ! OR              [ reduce using rule 65 (point_ae -> .) ]

    point_ae                       shift and go to state 71

state 66

    (59) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression . RIGHTPARENTHESIS
    (47) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 81
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 72

state 67

    (52) relational_expression -> STRING . EQUAL STRING

    EQUAL           shift and go to state 73


state 68

    (60) arithmetic_expression -> expression_id .

    RIGHTPARENTHESIS reduce using rule 60 (arithmetic_expression -> expression_id .)
    GREATER         reduce using rule 60 (arithmetic_expression -> expression_id .)
    LESSER          reduce using rule 60 (arithmetic_expression -> expression_id .)
    GREATEREQUAL    reduce using rule 60 (arithmetic_expression -> expression_id .)
    LESSEREQUAL     reduce using rule 60 (arithmetic_expression -> expression_id .)
    EQUAL           reduce using rule 60 (arithmetic_expression -> expression_id .)
    PLUS            reduce using rule 60 (arithmetic_expression -> expression_id .)
    MINUS           reduce using rule 60 (arithmetic_expression -> expression_id .)
    TIMES           reduce using rule 60 (arithmetic_expression -> expression_id .)
    DIVIDE          reduce using rule 60 (arithmetic_expression -> expression_id .)
    AND             reduce using rule 60 (arithmetic_expression -> expression_id .)
    OR              reduce using rule 60 (arithmetic_expression -> expression_id .)
    SEMICOLON       reduce using rule 60 (arithmetic_expression -> expression_id .)


state 69

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 82


state 70

    (44) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (45) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

    AND             shift and go to state 83
    OR              shift and go to state 84


state 71

    (42) logical_expression -> relational_expression point_ae . AND relational_expression point_ae
    (43) logical_expression -> relational_expression point_ae . OR relational_expression point_ae

    AND             shift and go to state 85
    OR              shift and go to state 86


state 72

    (47) relational_expression -> arithmetic_expression point_ae . GREATER arithmetic_expression point_ae
    (48) relational_expression -> arithmetic_expression point_ae . LESSER arithmetic_expression point_ae
    (49) relational_expression -> arithmetic_expression point_ae . GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> arithmetic_expression point_ae . LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> arithmetic_expression point_ae . EQUAL arithmetic_expression point_ae
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    GREATER         shift and go to state 87
    LESSER          shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEREQUAL     shift and go to state 90
    EQUAL           shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 73

    (52) relational_expression -> STRING EQUAL . STRING

    STRING          shift and go to state 96


state 74

    (19) assignstatement -> ID ASSIGN expression point_ae . SEMICOLON

    SEMICOLON       shift and go to state 97


state 75

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS . point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (25) point_if_then_ini -> .

    THEN            reduce using rule 25 (point_if_then_ini -> .)

    point_if_then_ini              shift and go to state 98

state 76

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression . RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET

    RIGHTPARENTHESIS shift and go to state 99


state 77

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON . point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (32) point_for_pre_exp -> .

    STRING          reduce using rule 32 (point_for_pre_exp -> .)
    LEFTPARENTHESIS reduce using rule 32 (point_for_pre_exp -> .)
    BOOLEAN         reduce using rule 32 (point_for_pre_exp -> .)
    INTEGER         reduce using rule 32 (point_for_pre_exp -> .)
    NUMBER          reduce using rule 32 (point_for_pre_exp -> .)
    ID              reduce using rule 32 (point_for_pre_exp -> .)

    point_for_pre_exp              shift and go to state 100

state 78

    (31) assignstatement_for -> ID ASSIGN . expression point_ae
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 101
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 79

    (46) logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .

    AND             reduce using rule 46 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 46 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 46 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 46 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)


state 80

    (53) relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .

    AND             reduce using rule 53 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 53 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 53 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 53 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)


state 81

    (59) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .

    GREATER         reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    LESSER          reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    GREATEREQUAL    reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    LESSEREQUAL     reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    EQUAL           reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    PLUS            reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    MINUS           reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    TIMES           reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    AND             reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 59 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)


state 82

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 102


state 83

    (44) logical_expression -> logical_expression point_ae AND . logical_expression point_ae
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 67
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 103
    relational_expression          shift and go to state 104
    arithmetic_expression          shift and go to state 105
    expression_id                  shift and go to state 68

state 84

    (45) logical_expression -> logical_expression point_ae OR . logical_expression point_ae
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 67
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 106
    relational_expression          shift and go to state 104
    arithmetic_expression          shift and go to state 105
    expression_id                  shift and go to state 68

state 85

    (42) logical_expression -> relational_expression point_ae AND . relational_expression point_ae
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 67
    LEFTPARENTHESIS shift and go to state 108
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 107
    arithmetic_expression          shift and go to state 105
    expression_id                  shift and go to state 68

state 86

    (43) logical_expression -> relational_expression point_ae OR . relational_expression point_ae
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 67
    LEFTPARENTHESIS shift and go to state 108
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 109
    arithmetic_expression          shift and go to state 105
    expression_id                  shift and go to state 68

state 87

    (47) relational_expression -> arithmetic_expression point_ae GREATER . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 110
    expression_id                  shift and go to state 68

state 88

    (48) relational_expression -> arithmetic_expression point_ae LESSER . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 112
    expression_id                  shift and go to state 68

state 89

    (49) relational_expression -> arithmetic_expression point_ae GREATEREQUAL . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 113
    expression_id                  shift and go to state 68

state 90

    (50) relational_expression -> arithmetic_expression point_ae LESSEREQUAL . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 114
    expression_id                  shift and go to state 68

state 91

    (51) relational_expression -> arithmetic_expression point_ae EQUAL . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 115
    expression_id                  shift and go to state 68

state 92

    (55) arithmetic_expression -> arithmetic_expression point_ae PLUS . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 116
    expression_id                  shift and go to state 68

state 93

    (56) arithmetic_expression -> arithmetic_expression point_ae MINUS . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 117
    expression_id                  shift and go to state 68

state 94

    (57) arithmetic_expression -> arithmetic_expression point_ae TIMES . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 118
    expression_id                  shift and go to state 68

state 95

    (58) arithmetic_expression -> arithmetic_expression point_ae DIVIDE . arithmetic_expression point_ae
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 119
    expression_id                  shift and go to state 68

state 96

    (52) relational_expression -> STRING EQUAL STRING .

    AND             reduce using rule 52 (relational_expression -> STRING EQUAL STRING .)
    OR              reduce using rule 52 (relational_expression -> STRING EQUAL STRING .)
    RIGHTPARENTHESIS reduce using rule 52 (relational_expression -> STRING EQUAL STRING .)
    SEMICOLON       reduce using rule 52 (relational_expression -> STRING EQUAL STRING .)


state 97

    (19) assignstatement -> ID ASSIGN expression point_ae SEMICOLON .

    END             reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    WRITE           reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    ID              reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    IF              reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    WHILE           reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    FOR             reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    RIGHTBRACKET    reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)


state 98

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini . THEN LEFTBRACKET statement RIGHTBRACKET elsestatement

    THEN            shift and go to state 120


state 99

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS . DO point_while LEFTBRACKET statement RIGHTBRACKET

    DO              shift and go to state 121


state 100

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp . expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (36) expression -> . logical_expression
    (37) expression -> . relational_expression
    (38) expression -> . arithmetic_expression
    (39) expression -> . expression_id
    (40) expression -> . STRING
    (41) logical_expression -> . relational_expression
    (42) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (43) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (44) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (45) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (46) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 122
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 101

    (31) assignstatement_for -> ID ASSIGN expression . point_ae
    (65) point_ae -> .

    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 123

state 102

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .

    END             reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)


state 103

    (44) logical_expression -> logical_expression point_ae AND logical_expression . point_ae
    (44) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (45) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (65) point_ae -> .

    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 124

state 104

    (41) logical_expression -> relational_expression .
    (42) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (43) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (65) point_ae -> .

  ! reduce/reduce conflict for AND resolved using rule 41 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 41 (logical_expression -> relational_expression .)
    AND             reduce using rule 41 (logical_expression -> relational_expression .)
    OR              reduce using rule 41 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS reduce using rule 41 (logical_expression -> relational_expression .)
    SEMICOLON       reduce using rule 41 (logical_expression -> relational_expression .)

  ! AND             [ reduce using rule 65 (point_ae -> .) ]
  ! OR              [ reduce using rule 65 (point_ae -> .) ]

    point_ae                       shift and go to state 71

state 105

    (47) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 72

state 106

    (45) logical_expression -> logical_expression point_ae OR logical_expression . point_ae
    (44) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (45) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (65) point_ae -> .

    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 125

state 107

    (42) logical_expression -> relational_expression point_ae AND relational_expression . point_ae
    (65) point_ae -> .

    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 126

state 108

    (53) relational_expression -> LEFTPARENTHESIS . relational_expression RIGHTPARENTHESIS
    (59) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (47) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (48) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (49) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (50) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (51) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (52) relational_expression -> . STRING EQUAL STRING
    (53) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (54) relational_expression -> . BOOLEAN
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    STRING          shift and go to state 67
    LEFTPARENTHESIS shift and go to state 108
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 127
    arithmetic_expression          shift and go to state 66
    expression_id                  shift and go to state 68

state 109

    (43) logical_expression -> relational_expression point_ae OR relational_expression . point_ae
    (65) point_ae -> .

    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 128

state 110

    (47) relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 129

state 111

    (59) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (55) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (59) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (60) arithmetic_expression -> . expression_id
    (61) arithmetic_expression -> . INTEGER
    (62) arithmetic_expression -> . NUMBER
    (63) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 111
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 130
    expression_id                  shift and go to state 68

state 112

    (48) relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 131

state 113

    (49) relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 132

state 114

    (50) relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 133

state 115

    (51) relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 134

state 116

    (55) arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 135

state 117

    (56) arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 136

state 118

    (57) arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 137

state 119

    (58) arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression . point_ae
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)
    GREATER         reduce using rule 65 (point_ae -> .)
    LESSER          reduce using rule 65 (point_ae -> .)
    GREATEREQUAL    reduce using rule 65 (point_ae -> .)
    LESSEREQUAL     reduce using rule 65 (point_ae -> .)
    EQUAL           reduce using rule 65 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 65 (point_ae -> .)
    SEMICOLON       reduce using rule 65 (point_ae -> .)
    AND             reduce using rule 65 (point_ae -> .)
    OR              reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 138

state 120

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN . LEFTBRACKET statement RIGHTBRACKET elsestatement

    LEFTBRACKET     shift and go to state 139


state 121

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO . point_while LEFTBRACKET statement RIGHTBRACKET
    (28) point_while -> .

    LEFTBRACKET     reduce using rule 28 (point_while -> .)

    point_while                    shift and go to state 140

state 122

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression . point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (33) point_for_end_exp -> . point_ae
    (65) point_ae -> .

    SEMICOLON       reduce using rule 65 (point_ae -> .)

    point_for_end_exp              shift and go to state 141
    point_ae                       shift and go to state 142

state 123

    (31) assignstatement_for -> ID ASSIGN expression point_ae .

    SEMICOLON       reduce using rule 31 (assignstatement_for -> ID ASSIGN expression point_ae .)


state 124

    (44) logical_expression -> logical_expression point_ae AND logical_expression point_ae .
    (44) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (45) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHTPARENTHESIS reduce using rule 44 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .)
    SEMICOLON       reduce using rule 44 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .)
    AND             shift and go to state 83
    OR              shift and go to state 84

  ! AND             [ reduce using rule 44 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .) ]
  ! OR              [ reduce using rule 44 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .) ]


state 125

    (45) logical_expression -> logical_expression point_ae OR logical_expression point_ae .
    (44) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (45) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHTPARENTHESIS reduce using rule 45 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .)
    SEMICOLON       reduce using rule 45 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .)
    AND             shift and go to state 83
    OR              shift and go to state 84

  ! AND             [ reduce using rule 45 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .) ]
  ! OR              [ reduce using rule 45 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .) ]


state 126

    (42) logical_expression -> relational_expression point_ae AND relational_expression point_ae .

    AND             reduce using rule 42 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    OR              reduce using rule 42 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 42 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    SEMICOLON       reduce using rule 42 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)


state 127

    (53) relational_expression -> LEFTPARENTHESIS relational_expression . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 80


state 128

    (43) logical_expression -> relational_expression point_ae OR relational_expression point_ae .

    AND             reduce using rule 43 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    OR              reduce using rule 43 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 43 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    SEMICOLON       reduce using rule 43 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)


state 129

    (47) relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 47 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    OR              reduce using rule 47 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 47 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 47 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 130

    (59) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression . RIGHTPARENTHESIS
    (55) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (65) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 81
    PLUS            reduce using rule 65 (point_ae -> .)
    MINUS           reduce using rule 65 (point_ae -> .)
    TIMES           reduce using rule 65 (point_ae -> .)
    DIVIDE          reduce using rule 65 (point_ae -> .)

    point_ae                       shift and go to state 143

state 131

    (48) relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 48 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    OR              reduce using rule 48 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 48 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 48 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 132

    (49) relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 49 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 49 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 49 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 49 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 133

    (50) relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 50 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 50 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 50 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 50 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 134

    (51) relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 51 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 51 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 51 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 51 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 135

    (55) arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    LESSER          reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    EQUAL           reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    AND             reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    OR              reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! PLUS            [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 55 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]


state 136

    (56) arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    LESSER          reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    EQUAL           reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    AND             reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    OR              reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! PLUS            [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 56 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]


state 137

    (57) arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    LESSER          reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    EQUAL           reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    AND             reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    OR              reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! PLUS            [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 57 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]


state 138

    (58) arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .
    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    LESSER          reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    EQUAL           reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    AND             reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    OR              reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95

  ! PLUS            [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 58 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]


state 139

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET . statement RIGHTBRACKET elsestatement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 144
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 140

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 145


state 141

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp . SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    SEMICOLON       shift and go to state 146


state 142

    (33) point_for_end_exp -> point_ae .

    SEMICOLON       reduce using rule 33 (point_for_end_exp -> point_ae .)


state 143

    (55) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (56) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (57) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (58) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    TIMES           shift and go to state 94
    DIVIDE          shift and go to state 95


state 144

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement . RIGHTBRACKET elsestatement
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 147
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 145

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 148
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 146

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON . increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (34) increment_decrement -> . ID PLUSPLUS
    (35) increment_decrement -> . ID MINUSMINUS

    ID              shift and go to state 150

    increment_decrement            shift and go to state 149

state 147

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET . elsestatement
    (23) elsestatement -> . ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET
    (24) elsestatement -> .

    ELSE            shift and go to state 152
    END             reduce using rule 24 (elsestatement -> .)
    WRITE           reduce using rule 24 (elsestatement -> .)
    ID              reduce using rule 24 (elsestatement -> .)
    IF              reduce using rule 24 (elsestatement -> .)
    WHILE           reduce using rule 24 (elsestatement -> .)
    FOR             reduce using rule 24 (elsestatement -> .)
    RIGHTBRACKET    reduce using rule 24 (elsestatement -> .)

    elsestatement                  shift and go to state 151

state 148

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 153
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 149

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement . RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTPARENTHESIS shift and go to state 154


state 150

    (34) increment_decrement -> ID . PLUSPLUS
    (35) increment_decrement -> ID . MINUSMINUS

    PLUSPLUS        shift and go to state 155
    MINUSMINUS      shift and go to state 156


state 151

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .

    END             reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    WRITE           reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    ID              reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    IF              reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    WHILE           reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    FOR             reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)
    RIGHTBRACKET    reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement .)


state 152

    (23) elsestatement -> ELSE . point_else_ini LEFTBRACKET statement RIGHTBRACKET
    (26) point_else_ini -> .

    LEFTBRACKET     reduce using rule 26 (point_else_ini -> .)

    point_else_ini                 shift and go to state 157

state 153

    (27) whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 27 (whileloop -> WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET .)


state 154

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 158


state 155

    (34) increment_decrement -> ID PLUSPLUS .

    RIGHTPARENTHESIS reduce using rule 34 (increment_decrement -> ID PLUSPLUS .)


state 156

    (35) increment_decrement -> ID MINUSMINUS .

    RIGHTPARENTHESIS reduce using rule 35 (increment_decrement -> ID MINUSMINUS .)


state 157

    (23) elsestatement -> ELSE point_else_ini . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 159


state 158

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 160
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 159

    (23) elsestatement -> ELSE point_else_ini LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 161
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 160

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 162
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 161

    (23) elsestatement -> ELSE point_else_ini LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET elsestatement
    (27) whileloop -> . WHILE LEFTPARENTHESIS point_first_exp expression RIGHTPARENTHESIS DO point_while LEFTBRACKET statement RIGHTBRACKET
    (30) forloop -> . FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 163
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 162

    (30) forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 30 (forloop -> FOR LEFTPARENTHESIS assignstatement_for SEMICOLON point_for_pre_exp expression point_for_end_exp SEMICOLON increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)


state 163

    (23) elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 23 (elsestatement -> ELSE point_else_ini LEFTBRACKET statement RIGHTBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 34 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for IF in state 35 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 35 resolved as shift
WARNING: shift/reduce conflict for FOR in state 35 resolved as shift
WARNING: shift/reduce conflict for RIGHTPARENTHESIS in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for OR in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 138 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 138 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (expression -> relational_expression)
WARNING: rejected rule (logical_expression -> relational_expression) in state 49
WARNING: reduce/reduce conflict in state 49 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 49
WARNING: reduce/reduce conflict in state 51 resolved using rule (expression -> expression_id)
WARNING: rejected rule (arithmetic_expression -> expression_id) in state 51
WARNING: reduce/reduce conflict in state 65 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 65
WARNING: reduce/reduce conflict in state 104 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 104
