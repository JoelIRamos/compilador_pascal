Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET
Rule 2     Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET
Rule 3     variable -> VAR variables COLON datatype SEMICOLON
Rule 4     variable -> variable variable
Rule 5     variables -> ID
Rule 6     variables -> variables COMMA variables
Rule 7     datatype -> INT
Rule 8     datatype -> REAL
Rule 9     datatype -> BOOL
Rule 10    datatype -> STR
Rule 11    block -> BEGIN SEMICOLON statement END SEMICOLON
Rule 12    statement -> writestatement
Rule 13    statement -> assignstatement
Rule 14    statement -> ifstatement
Rule 15    statement -> whileloop
Rule 16    statement -> forloop
Rule 17    statement -> statement statement
Rule 18    writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
Rule 19    assignstatement -> ID ASSIGN expression point_ae SEMICOLON
Rule 20    assignstatement -> ID PLUSPLUS SEMICOLON
Rule 21    assignstatement -> ID MINUSMINUS SEMICOLON
Rule 22    ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
Rule 23    elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET
Rule 24    elsestatement -> <empty>
Rule 25    whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
Rule 26    forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
Rule 27    increment_decrement -> PLUSPLUS
Rule 28    increment_decrement -> MINUSMINUS
Rule 29    expression -> logical_expression
Rule 30    expression -> relational_expression
Rule 31    expression -> arithmetic_expression
Rule 32    expression -> expression_id
Rule 33    expression -> STRING
Rule 34    logical_expression -> relational_expression
Rule 35    logical_expression -> relational_expression point_ae AND relational_expression point_ae
Rule 36    logical_expression -> relational_expression point_ae OR relational_expression point_ae
Rule 37    logical_expression -> logical_expression point_ae AND logical_expression point_ae
Rule 38    logical_expression -> logical_expression point_ae OR logical_expression point_ae
Rule 39    logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
Rule 40    relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae
Rule 41    relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae
Rule 42    relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
Rule 43    relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
Rule 44    relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
Rule 45    relational_expression -> STRING EQUAL STRING
Rule 46    relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
Rule 47    relational_expression -> BOOLEAN
Rule 48    arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae
Rule 49    arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae
Rule 50    arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae
Rule 51    arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
Rule 52    arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
Rule 53    arithmetic_expression -> expression_id
Rule 54    arithmetic_expression -> INTEGER
Rule 55    arithmetic_expression -> NUMBER
Rule 56    expression_id -> ID
Rule 57    empty -> <empty>
Rule 58    point_ae -> <empty>
Rule 59    point_if_then_ini -> <empty>
Rule 60    point_if_then_end -> <empty>

Terminals, with rules where they appear

AND                  : 35 37
ASSIGN               : 19 26
BEGIN                : 11
BOOL                 : 9
BOOLEAN              : 47
COLON                : 3
COMMA                : 6
DIVIDE               : 51
DO                   : 25
ELSE                 : 23
END                  : 11
EQUAL                : 44 45
FOR                  : 26
GREATER              : 40
GREATEREQUAL         : 42
ID                   : 1 2 5 19 20 21 26 26 56
IF                   : 22
INT                  : 7
INTEGER              : 54
LEFTBRACKET          : 1 2 22 23 25 26
LEFTPARENTHESIS      : 18 22 25 26 39 46 52
LESSER               : 41
LESSEREQUAL          : 43
MINUS                : 49
MINUSMINUS           : 21 28
NUMBER               : 55
OR                   : 36 38
PLUS                 : 48
PLUSPLUS             : 20 27
PROGRAM              : 1 2
REAL                 : 8
RIGHTBRACKET         : 1 2 22 23 25 26
RIGHTPARENTHESIS     : 18 22 25 26 39 46 52
SEMICOLON            : 3 11 11 18 19 20 21 26 26
STR                  : 10
STRING               : 33 45 45
THEN                 : 22
TIMES                : 50
VAR                  : 3
WHILE                : 25
WRITE                : 18
error                : 

Nonterminals, with rules where they appear

Program              : 0
arithmetic_expression : 31 40 40 41 41 42 42 43 43 44 44 48 48 49 49 50 50 51 51 52
assignstatement      : 13
block                : 1 2
datatype             : 3
elsestatement        : 22
empty                : 
expression           : 18 19 22 25 26 26
expression_id        : 32 53
forloop              : 16
ifstatement          : 14
increment_decrement  : 26
logical_expression   : 29 37 37 38 38 39
point_ae             : 18 19 35 35 36 36 37 37 38 38 40 40 41 41 42 42 43 43 44 44 48 48 49 49 50 50 51 51
point_if_then_end    : 22
point_if_then_ini    : 22
relational_expression : 30 34 35 35 36 36 46
statement            : 11 17 17 22 23 25 26
variable             : 1 4 4
variables            : 3 6 6
whileloop            : 15
writestatement       : 12

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> . PROGRAM ID LEFTBRACKET block RIGHTBRACKET

    PROGRAM         shift and go to state 2

    Program                        shift and go to state 1

state 1

    (0) S' -> Program .



state 2

    (1) Program -> PROGRAM . ID LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> PROGRAM . ID LEFTBRACKET block RIGHTBRACKET

    ID              shift and go to state 3


state 3

    (1) Program -> PROGRAM ID . LEFTBRACKET variable block RIGHTBRACKET
    (2) Program -> PROGRAM ID . LEFTBRACKET block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 4


state 4

    (1) Program -> PROGRAM ID LEFTBRACKET . variable block RIGHTBRACKET
    (2) Program -> PROGRAM ID LEFTBRACKET . block RIGHTBRACKET
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable
    (11) block -> . BEGIN SEMICOLON statement END SEMICOLON

    VAR             shift and go to state 7
    BEGIN           shift and go to state 8

    variable                       shift and go to state 5
    block                          shift and go to state 6

state 5

    (1) Program -> PROGRAM ID LEFTBRACKET variable . block RIGHTBRACKET
    (4) variable -> variable . variable
    (11) block -> . BEGIN SEMICOLON statement END SEMICOLON
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable

    BEGIN           shift and go to state 8
    VAR             shift and go to state 7

    variable                       shift and go to state 9
    block                          shift and go to state 10

state 6

    (2) Program -> PROGRAM ID LEFTBRACKET block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 11


state 7

    (3) variable -> VAR . variables COLON datatype SEMICOLON
    (5) variables -> . ID
    (6) variables -> . variables COMMA variables

    ID              shift and go to state 13

    variables                      shift and go to state 12

state 8

    (11) block -> BEGIN . SEMICOLON statement END SEMICOLON

    SEMICOLON       shift and go to state 14


state 9

    (4) variable -> variable variable .
    (4) variable -> variable . variable
    (3) variable -> . VAR variables COLON datatype SEMICOLON
    (4) variable -> . variable variable

  ! shift/reduce conflict for VAR resolved as shift
    BEGIN           reduce using rule 4 (variable -> variable variable .)
    VAR             shift and go to state 7

  ! VAR             [ reduce using rule 4 (variable -> variable variable .) ]

    variable                       shift and go to state 9

state 10

    (1) Program -> PROGRAM ID LEFTBRACKET variable block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 15


state 11

    (2) Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET .

    $end            reduce using rule 2 (Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET .)


state 12

    (3) variable -> VAR variables . COLON datatype SEMICOLON
    (6) variables -> variables . COMMA variables

    COLON           shift and go to state 16
    COMMA           shift and go to state 17


state 13

    (5) variables -> ID .

    COLON           reduce using rule 5 (variables -> ID .)
    COMMA           reduce using rule 5 (variables -> ID .)


state 14

    (11) block -> BEGIN SEMICOLON . statement END SEMICOLON
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 18
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 15

    (1) Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET .

    $end            reduce using rule 1 (Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET .)


state 16

    (3) variable -> VAR variables COLON . datatype SEMICOLON
    (7) datatype -> . INT
    (8) datatype -> . REAL
    (9) datatype -> . BOOL
    (10) datatype -> . STR

    INT             shift and go to state 30
    REAL            shift and go to state 31
    BOOL            shift and go to state 32
    STR             shift and go to state 33

    datatype                       shift and go to state 29

state 17

    (6) variables -> variables COMMA . variables
    (5) variables -> . ID
    (6) variables -> . variables COMMA variables

    ID              shift and go to state 13

    variables                      shift and go to state 34

state 18

    (11) block -> BEGIN SEMICOLON statement . END SEMICOLON
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    END             shift and go to state 36
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 19

    (12) statement -> writestatement .

    END             reduce using rule 12 (statement -> writestatement .)
    WRITE           reduce using rule 12 (statement -> writestatement .)
    ID              reduce using rule 12 (statement -> writestatement .)
    IF              reduce using rule 12 (statement -> writestatement .)
    WHILE           reduce using rule 12 (statement -> writestatement .)
    FOR             reduce using rule 12 (statement -> writestatement .)
    RIGHTBRACKET    reduce using rule 12 (statement -> writestatement .)


state 20

    (13) statement -> assignstatement .

    END             reduce using rule 13 (statement -> assignstatement .)
    WRITE           reduce using rule 13 (statement -> assignstatement .)
    ID              reduce using rule 13 (statement -> assignstatement .)
    IF              reduce using rule 13 (statement -> assignstatement .)
    WHILE           reduce using rule 13 (statement -> assignstatement .)
    FOR             reduce using rule 13 (statement -> assignstatement .)
    RIGHTBRACKET    reduce using rule 13 (statement -> assignstatement .)


state 21

    (14) statement -> ifstatement .

    END             reduce using rule 14 (statement -> ifstatement .)
    WRITE           reduce using rule 14 (statement -> ifstatement .)
    ID              reduce using rule 14 (statement -> ifstatement .)
    IF              reduce using rule 14 (statement -> ifstatement .)
    WHILE           reduce using rule 14 (statement -> ifstatement .)
    FOR             reduce using rule 14 (statement -> ifstatement .)
    RIGHTBRACKET    reduce using rule 14 (statement -> ifstatement .)


state 22

    (15) statement -> whileloop .

    END             reduce using rule 15 (statement -> whileloop .)
    WRITE           reduce using rule 15 (statement -> whileloop .)
    ID              reduce using rule 15 (statement -> whileloop .)
    IF              reduce using rule 15 (statement -> whileloop .)
    WHILE           reduce using rule 15 (statement -> whileloop .)
    FOR             reduce using rule 15 (statement -> whileloop .)
    RIGHTBRACKET    reduce using rule 15 (statement -> whileloop .)


state 23

    (16) statement -> forloop .

    END             reduce using rule 16 (statement -> forloop .)
    WRITE           reduce using rule 16 (statement -> forloop .)
    ID              reduce using rule 16 (statement -> forloop .)
    IF              reduce using rule 16 (statement -> forloop .)
    WHILE           reduce using rule 16 (statement -> forloop .)
    FOR             reduce using rule 16 (statement -> forloop .)
    RIGHTBRACKET    reduce using rule 16 (statement -> forloop .)


state 24

    (18) writestatement -> WRITE . LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 37


state 25

    (19) assignstatement -> ID . ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> ID . PLUSPLUS SEMICOLON
    (21) assignstatement -> ID . MINUSMINUS SEMICOLON

    ASSIGN          shift and go to state 38
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40


state 26

    (22) ifstatement -> IF . LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement

    LEFTPARENTHESIS shift and go to state 41


state 27

    (25) whileloop -> WHILE . LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET

    LEFTPARENTHESIS shift and go to state 42


state 28

    (26) forloop -> FOR . LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    LEFTPARENTHESIS shift and go to state 43


state 29

    (3) variable -> VAR variables COLON datatype . SEMICOLON

    SEMICOLON       shift and go to state 44


state 30

    (7) datatype -> INT .

    SEMICOLON       reduce using rule 7 (datatype -> INT .)


state 31

    (8) datatype -> REAL .

    SEMICOLON       reduce using rule 8 (datatype -> REAL .)


state 32

    (9) datatype -> BOOL .

    SEMICOLON       reduce using rule 9 (datatype -> BOOL .)


state 33

    (10) datatype -> STR .

    SEMICOLON       reduce using rule 10 (datatype -> STR .)


state 34

    (6) variables -> variables COMMA variables .
    (6) variables -> variables . COMMA variables

  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 6 (variables -> variables COMMA variables .)
    COMMA           shift and go to state 17

  ! COMMA           [ reduce using rule 6 (variables -> variables COMMA variables .) ]


state 35

    (17) statement -> statement statement .
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    END             reduce using rule 17 (statement -> statement statement .)
    RIGHTBRACKET    reduce using rule 17 (statement -> statement statement .)
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

  ! WRITE           [ reduce using rule 17 (statement -> statement statement .) ]
  ! ID              [ reduce using rule 17 (statement -> statement statement .) ]
  ! IF              [ reduce using rule 17 (statement -> statement statement .) ]
  ! WHILE           [ reduce using rule 17 (statement -> statement statement .) ]
  ! FOR             [ reduce using rule 17 (statement -> statement statement .) ]

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 36

    (11) block -> BEGIN SEMICOLON statement END . SEMICOLON

    SEMICOLON       shift and go to state 45


state 37

    (18) writestatement -> WRITE LEFTPARENTHESIS . expression point_ae RIGHTPARENTHESIS SEMICOLON
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 47
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 38

    (19) assignstatement -> ID ASSIGN . expression point_ae SEMICOLON
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 57
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 39

    (20) assignstatement -> ID PLUSPLUS . SEMICOLON

    SEMICOLON       shift and go to state 58


state 40

    (21) assignstatement -> ID MINUSMINUS . SEMICOLON

    SEMICOLON       shift and go to state 59


state 41

    (22) ifstatement -> IF LEFTPARENTHESIS . expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 60
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 42

    (25) whileloop -> WHILE LEFTPARENTHESIS . expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 61
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 43

    (26) forloop -> FOR LEFTPARENTHESIS . ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    ID              shift and go to state 62


state 44

    (3) variable -> VAR variables COLON datatype SEMICOLON .

    BEGIN           reduce using rule 3 (variable -> VAR variables COLON datatype SEMICOLON .)
    VAR             reduce using rule 3 (variable -> VAR variables COLON datatype SEMICOLON .)


state 45

    (11) block -> BEGIN SEMICOLON statement END SEMICOLON .

    RIGHTBRACKET    reduce using rule 11 (block -> BEGIN SEMICOLON statement END SEMICOLON .)


state 46

    (39) logical_expression -> LEFTPARENTHESIS . logical_expression RIGHTPARENTHESIS
    (46) relational_expression -> LEFTPARENTHESIS . relational_expression RIGHTPARENTHESIS
    (52) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 66
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 63
    relational_expression          shift and go to state 64
    arithmetic_expression          shift and go to state 65
    expression_id                  shift and go to state 67

state 47

    (18) writestatement -> WRITE LEFTPARENTHESIS expression . point_ae RIGHTPARENTHESIS SEMICOLON
    (58) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 68

state 48

    (29) expression -> logical_expression .
    (37) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (38) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (58) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 29 (expression -> logical_expression .)
    SEMICOLON       reduce using rule 29 (expression -> logical_expression .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 69

state 49

    (30) expression -> relational_expression .
    (34) logical_expression -> relational_expression .
    (35) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (36) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (58) point_ae -> .

  ! reduce/reduce conflict for RIGHTPARENTHESIS resolved using rule 30 (expression -> relational_expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 30 (expression -> relational_expression .)
  ! reduce/reduce conflict for AND resolved using rule 34 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 34 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS reduce using rule 30 (expression -> relational_expression .)
    SEMICOLON       reduce using rule 30 (expression -> relational_expression .)
    AND             reduce using rule 34 (logical_expression -> relational_expression .)
    OR              reduce using rule 34 (logical_expression -> relational_expression .)

  ! RIGHTPARENTHESIS [ reduce using rule 34 (logical_expression -> relational_expression .) ]
  ! SEMICOLON       [ reduce using rule 34 (logical_expression -> relational_expression .) ]
  ! AND             [ reduce using rule 58 (point_ae -> .) ]
  ! OR              [ reduce using rule 58 (point_ae -> .) ]

    point_ae                       shift and go to state 70

state 50

    (31) expression -> arithmetic_expression .
    (40) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    RIGHTPARENTHESIS reduce using rule 31 (expression -> arithmetic_expression .)
    SEMICOLON       reduce using rule 31 (expression -> arithmetic_expression .)
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 71

state 51

    (32) expression -> expression_id .
    (53) arithmetic_expression -> expression_id .

  ! reduce/reduce conflict for RIGHTPARENTHESIS resolved using rule 32 (expression -> expression_id .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 32 (expression -> expression_id .)
    RIGHTPARENTHESIS reduce using rule 32 (expression -> expression_id .)
    SEMICOLON       reduce using rule 32 (expression -> expression_id .)
    GREATER         reduce using rule 53 (arithmetic_expression -> expression_id .)
    LESSER          reduce using rule 53 (arithmetic_expression -> expression_id .)
    GREATEREQUAL    reduce using rule 53 (arithmetic_expression -> expression_id .)
    LESSEREQUAL     reduce using rule 53 (arithmetic_expression -> expression_id .)
    EQUAL           reduce using rule 53 (arithmetic_expression -> expression_id .)
    PLUS            reduce using rule 53 (arithmetic_expression -> expression_id .)
    MINUS           reduce using rule 53 (arithmetic_expression -> expression_id .)
    TIMES           reduce using rule 53 (arithmetic_expression -> expression_id .)
    DIVIDE          reduce using rule 53 (arithmetic_expression -> expression_id .)

  ! RIGHTPARENTHESIS [ reduce using rule 53 (arithmetic_expression -> expression_id .) ]
  ! SEMICOLON       [ reduce using rule 53 (arithmetic_expression -> expression_id .) ]


state 52

    (33) expression -> STRING .
    (45) relational_expression -> STRING . EQUAL STRING

    RIGHTPARENTHESIS reduce using rule 33 (expression -> STRING .)
    SEMICOLON       reduce using rule 33 (expression -> STRING .)
    EQUAL           shift and go to state 72


state 53

    (47) relational_expression -> BOOLEAN .

    AND             reduce using rule 47 (relational_expression -> BOOLEAN .)
    OR              reduce using rule 47 (relational_expression -> BOOLEAN .)
    RIGHTPARENTHESIS reduce using rule 47 (relational_expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 47 (relational_expression -> BOOLEAN .)


state 54

    (54) arithmetic_expression -> INTEGER .

    GREATER         reduce using rule 54 (arithmetic_expression -> INTEGER .)
    LESSER          reduce using rule 54 (arithmetic_expression -> INTEGER .)
    GREATEREQUAL    reduce using rule 54 (arithmetic_expression -> INTEGER .)
    LESSEREQUAL     reduce using rule 54 (arithmetic_expression -> INTEGER .)
    EQUAL           reduce using rule 54 (arithmetic_expression -> INTEGER .)
    PLUS            reduce using rule 54 (arithmetic_expression -> INTEGER .)
    MINUS           reduce using rule 54 (arithmetic_expression -> INTEGER .)
    TIMES           reduce using rule 54 (arithmetic_expression -> INTEGER .)
    DIVIDE          reduce using rule 54 (arithmetic_expression -> INTEGER .)
    RIGHTPARENTHESIS reduce using rule 54 (arithmetic_expression -> INTEGER .)
    SEMICOLON       reduce using rule 54 (arithmetic_expression -> INTEGER .)
    AND             reduce using rule 54 (arithmetic_expression -> INTEGER .)
    OR              reduce using rule 54 (arithmetic_expression -> INTEGER .)


state 55

    (55) arithmetic_expression -> NUMBER .

    GREATER         reduce using rule 55 (arithmetic_expression -> NUMBER .)
    LESSER          reduce using rule 55 (arithmetic_expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 55 (arithmetic_expression -> NUMBER .)
    LESSEREQUAL     reduce using rule 55 (arithmetic_expression -> NUMBER .)
    EQUAL           reduce using rule 55 (arithmetic_expression -> NUMBER .)
    PLUS            reduce using rule 55 (arithmetic_expression -> NUMBER .)
    MINUS           reduce using rule 55 (arithmetic_expression -> NUMBER .)
    TIMES           reduce using rule 55 (arithmetic_expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (arithmetic_expression -> NUMBER .)
    RIGHTPARENTHESIS reduce using rule 55 (arithmetic_expression -> NUMBER .)
    SEMICOLON       reduce using rule 55 (arithmetic_expression -> NUMBER .)
    AND             reduce using rule 55 (arithmetic_expression -> NUMBER .)
    OR              reduce using rule 55 (arithmetic_expression -> NUMBER .)


state 56

    (56) expression_id -> ID .

    RIGHTPARENTHESIS reduce using rule 56 (expression_id -> ID .)
    GREATER         reduce using rule 56 (expression_id -> ID .)
    LESSER          reduce using rule 56 (expression_id -> ID .)
    GREATEREQUAL    reduce using rule 56 (expression_id -> ID .)
    LESSEREQUAL     reduce using rule 56 (expression_id -> ID .)
    EQUAL           reduce using rule 56 (expression_id -> ID .)
    PLUS            reduce using rule 56 (expression_id -> ID .)
    MINUS           reduce using rule 56 (expression_id -> ID .)
    TIMES           reduce using rule 56 (expression_id -> ID .)
    DIVIDE          reduce using rule 56 (expression_id -> ID .)
    SEMICOLON       reduce using rule 56 (expression_id -> ID .)
    AND             reduce using rule 56 (expression_id -> ID .)
    OR              reduce using rule 56 (expression_id -> ID .)


state 57

    (19) assignstatement -> ID ASSIGN expression . point_ae SEMICOLON
    (58) point_ae -> .

    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 73

state 58

    (20) assignstatement -> ID PLUSPLUS SEMICOLON .

    END             reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    WRITE           reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    ID              reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    IF              reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    WHILE           reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    FOR             reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 20 (assignstatement -> ID PLUSPLUS SEMICOLON .)


state 59

    (21) assignstatement -> ID MINUSMINUS SEMICOLON .

    END             reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    WRITE           reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    ID              reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    IF              reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    WHILE           reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    FOR             reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 21 (assignstatement -> ID MINUSMINUS SEMICOLON .)


state 60

    (22) ifstatement -> IF LEFTPARENTHESIS expression . RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement

    RIGHTPARENTHESIS shift and go to state 74


state 61

    (25) whileloop -> WHILE LEFTPARENTHESIS expression . RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET

    RIGHTPARENTHESIS shift and go to state 75


state 62

    (26) forloop -> FOR LEFTPARENTHESIS ID . ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    ASSIGN          shift and go to state 76


state 63

    (39) logical_expression -> LEFTPARENTHESIS logical_expression . RIGHTPARENTHESIS
    (37) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (38) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (58) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 77
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 69

state 64

    (46) relational_expression -> LEFTPARENTHESIS relational_expression . RIGHTPARENTHESIS
    (34) logical_expression -> relational_expression .
    (35) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (36) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (58) point_ae -> .

  ! shift/reduce conflict for RIGHTPARENTHESIS resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 34 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 34 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS shift and go to state 78
    AND             reduce using rule 34 (logical_expression -> relational_expression .)
    OR              reduce using rule 34 (logical_expression -> relational_expression .)

  ! RIGHTPARENTHESIS [ reduce using rule 34 (logical_expression -> relational_expression .) ]
  ! AND             [ reduce using rule 58 (point_ae -> .) ]
  ! OR              [ reduce using rule 58 (point_ae -> .) ]

    point_ae                       shift and go to state 70

state 65

    (52) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression . RIGHTPARENTHESIS
    (40) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 79
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 71

state 66

    (45) relational_expression -> STRING . EQUAL STRING

    EQUAL           shift and go to state 72


state 67

    (53) arithmetic_expression -> expression_id .

    RIGHTPARENTHESIS reduce using rule 53 (arithmetic_expression -> expression_id .)
    GREATER         reduce using rule 53 (arithmetic_expression -> expression_id .)
    LESSER          reduce using rule 53 (arithmetic_expression -> expression_id .)
    GREATEREQUAL    reduce using rule 53 (arithmetic_expression -> expression_id .)
    LESSEREQUAL     reduce using rule 53 (arithmetic_expression -> expression_id .)
    EQUAL           reduce using rule 53 (arithmetic_expression -> expression_id .)
    PLUS            reduce using rule 53 (arithmetic_expression -> expression_id .)
    MINUS           reduce using rule 53 (arithmetic_expression -> expression_id .)
    TIMES           reduce using rule 53 (arithmetic_expression -> expression_id .)
    DIVIDE          reduce using rule 53 (arithmetic_expression -> expression_id .)
    AND             reduce using rule 53 (arithmetic_expression -> expression_id .)
    OR              reduce using rule 53 (arithmetic_expression -> expression_id .)
    SEMICOLON       reduce using rule 53 (arithmetic_expression -> expression_id .)


state 68

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 80


state 69

    (37) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (38) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

    AND             shift and go to state 81
    OR              shift and go to state 82


state 70

    (35) logical_expression -> relational_expression point_ae . AND relational_expression point_ae
    (36) logical_expression -> relational_expression point_ae . OR relational_expression point_ae

    AND             shift and go to state 83
    OR              shift and go to state 84


state 71

    (40) relational_expression -> arithmetic_expression point_ae . GREATER arithmetic_expression point_ae
    (41) relational_expression -> arithmetic_expression point_ae . LESSER arithmetic_expression point_ae
    (42) relational_expression -> arithmetic_expression point_ae . GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> arithmetic_expression point_ae . LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> arithmetic_expression point_ae . EQUAL arithmetic_expression point_ae
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    GREATER         shift and go to state 85
    LESSER          shift and go to state 86
    GREATEREQUAL    shift and go to state 87
    LESSEREQUAL     shift and go to state 88
    EQUAL           shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 72

    (45) relational_expression -> STRING EQUAL . STRING

    STRING          shift and go to state 94


state 73

    (19) assignstatement -> ID ASSIGN expression point_ae . SEMICOLON

    SEMICOLON       shift and go to state 95


state 74

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS . point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (59) point_if_then_ini -> .

    THEN            reduce using rule 59 (point_if_then_ini -> .)

    point_if_then_ini              shift and go to state 96

state 75

    (25) whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS . DO LEFTBRACKET statement RIGHTBRACKET

    DO              shift and go to state 97


state 76

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN . expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 98
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 77

    (39) logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .

    AND             reduce using rule 39 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 39 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 39 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 39 (logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS .)


state 78

    (46) relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .

    AND             reduce using rule 46 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 46 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 46 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 46 (relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS .)


state 79

    (52) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .

    GREATER         reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    LESSER          reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    GREATEREQUAL    reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    LESSEREQUAL     reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    EQUAL           reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    PLUS            reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    MINUS           reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    TIMES           reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    AND             reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)
    OR              reduce using rule 52 (arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS .)


state 80

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 99


state 81

    (37) logical_expression -> logical_expression point_ae AND . logical_expression point_ae
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 66
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 100
    relational_expression          shift and go to state 101
    arithmetic_expression          shift and go to state 102
    expression_id                  shift and go to state 67

state 82

    (38) logical_expression -> logical_expression point_ae OR . logical_expression point_ae
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 46
    STRING          shift and go to state 66
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    logical_expression             shift and go to state 103
    relational_expression          shift and go to state 101
    arithmetic_expression          shift and go to state 102
    expression_id                  shift and go to state 67

state 83

    (35) logical_expression -> relational_expression point_ae AND . relational_expression point_ae
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 66
    LEFTPARENTHESIS shift and go to state 105
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 104
    arithmetic_expression          shift and go to state 102
    expression_id                  shift and go to state 67

state 84

    (36) logical_expression -> relational_expression point_ae OR . relational_expression point_ae
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 66
    LEFTPARENTHESIS shift and go to state 105
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 106
    arithmetic_expression          shift and go to state 102
    expression_id                  shift and go to state 67

state 85

    (40) relational_expression -> arithmetic_expression point_ae GREATER . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 107
    expression_id                  shift and go to state 67

state 86

    (41) relational_expression -> arithmetic_expression point_ae LESSER . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 109
    expression_id                  shift and go to state 67

state 87

    (42) relational_expression -> arithmetic_expression point_ae GREATEREQUAL . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 110
    expression_id                  shift and go to state 67

state 88

    (43) relational_expression -> arithmetic_expression point_ae LESSEREQUAL . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 111
    expression_id                  shift and go to state 67

state 89

    (44) relational_expression -> arithmetic_expression point_ae EQUAL . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 112
    expression_id                  shift and go to state 67

state 90

    (48) arithmetic_expression -> arithmetic_expression point_ae PLUS . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 113
    expression_id                  shift and go to state 67

state 91

    (49) arithmetic_expression -> arithmetic_expression point_ae MINUS . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 114
    expression_id                  shift and go to state 67

state 92

    (50) arithmetic_expression -> arithmetic_expression point_ae TIMES . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 115
    expression_id                  shift and go to state 67

state 93

    (51) arithmetic_expression -> arithmetic_expression point_ae DIVIDE . arithmetic_expression point_ae
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 116
    expression_id                  shift and go to state 67

state 94

    (45) relational_expression -> STRING EQUAL STRING .

    AND             reduce using rule 45 (relational_expression -> STRING EQUAL STRING .)
    OR              reduce using rule 45 (relational_expression -> STRING EQUAL STRING .)
    RIGHTPARENTHESIS reduce using rule 45 (relational_expression -> STRING EQUAL STRING .)
    SEMICOLON       reduce using rule 45 (relational_expression -> STRING EQUAL STRING .)


state 95

    (19) assignstatement -> ID ASSIGN expression point_ae SEMICOLON .

    END             reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    WRITE           reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    ID              reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    IF              reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    WHILE           reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    FOR             reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)
    RIGHTBRACKET    reduce using rule 19 (assignstatement -> ID ASSIGN expression point_ae SEMICOLON .)


state 96

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini . THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement

    THEN            shift and go to state 117


state 97

    (25) whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 118


state 98

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression . SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    SEMICOLON       shift and go to state 119


state 99

    (18) writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .

    END             reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 18 (writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON .)


state 100

    (37) logical_expression -> logical_expression point_ae AND logical_expression . point_ae
    (37) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (38) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (58) point_ae -> .

    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 120

state 101

    (34) logical_expression -> relational_expression .
    (35) logical_expression -> relational_expression . point_ae AND relational_expression point_ae
    (36) logical_expression -> relational_expression . point_ae OR relational_expression point_ae
    (58) point_ae -> .

  ! reduce/reduce conflict for AND resolved using rule 34 (logical_expression -> relational_expression .)
  ! reduce/reduce conflict for OR resolved using rule 34 (logical_expression -> relational_expression .)
    AND             reduce using rule 34 (logical_expression -> relational_expression .)
    OR              reduce using rule 34 (logical_expression -> relational_expression .)
    RIGHTPARENTHESIS reduce using rule 34 (logical_expression -> relational_expression .)
    SEMICOLON       reduce using rule 34 (logical_expression -> relational_expression .)

  ! AND             [ reduce using rule 58 (point_ae -> .) ]
  ! OR              [ reduce using rule 58 (point_ae -> .) ]

    point_ae                       shift and go to state 70

state 102

    (40) relational_expression -> arithmetic_expression . point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> arithmetic_expression . point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> arithmetic_expression . point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> arithmetic_expression . point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> arithmetic_expression . point_ae EQUAL arithmetic_expression point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 71

state 103

    (38) logical_expression -> logical_expression point_ae OR logical_expression . point_ae
    (37) logical_expression -> logical_expression . point_ae AND logical_expression point_ae
    (38) logical_expression -> logical_expression . point_ae OR logical_expression point_ae
    (58) point_ae -> .

    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 121

state 104

    (35) logical_expression -> relational_expression point_ae AND relational_expression . point_ae
    (58) point_ae -> .

    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 122

state 105

    (46) relational_expression -> LEFTPARENTHESIS . relational_expression RIGHTPARENTHESIS
    (52) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 66
    LEFTPARENTHESIS shift and go to state 105
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    relational_expression          shift and go to state 123
    arithmetic_expression          shift and go to state 65
    expression_id                  shift and go to state 67

state 106

    (36) logical_expression -> relational_expression point_ae OR relational_expression . point_ae
    (58) point_ae -> .

    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 124

state 107

    (40) relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 125

state 108

    (52) arithmetic_expression -> LEFTPARENTHESIS . arithmetic_expression RIGHTPARENTHESIS
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    LEFTPARENTHESIS shift and go to state 108
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    arithmetic_expression          shift and go to state 126
    expression_id                  shift and go to state 67

state 109

    (41) relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 127

state 110

    (42) relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 128

state 111

    (43) relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 129

state 112

    (44) relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 130

state 113

    (48) arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 131

state 114

    (49) arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 132

state 115

    (50) arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 133

state 116

    (51) arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression . point_ae
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)
    GREATER         reduce using rule 58 (point_ae -> .)
    LESSER          reduce using rule 58 (point_ae -> .)
    GREATEREQUAL    reduce using rule 58 (point_ae -> .)
    LESSEREQUAL     reduce using rule 58 (point_ae -> .)
    EQUAL           reduce using rule 58 (point_ae -> .)
    RIGHTPARENTHESIS reduce using rule 58 (point_ae -> .)
    SEMICOLON       reduce using rule 58 (point_ae -> .)
    AND             reduce using rule 58 (point_ae -> .)
    OR              reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 134

state 117

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN . LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement

    LEFTBRACKET     shift and go to state 135


state 118

    (25) whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 136
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 119

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON . expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (29) expression -> . logical_expression
    (30) expression -> . relational_expression
    (31) expression -> . arithmetic_expression
    (32) expression -> . expression_id
    (33) expression -> . STRING
    (34) logical_expression -> . relational_expression
    (35) logical_expression -> . relational_expression point_ae AND relational_expression point_ae
    (36) logical_expression -> . relational_expression point_ae OR relational_expression point_ae
    (37) logical_expression -> . logical_expression point_ae AND logical_expression point_ae
    (38) logical_expression -> . logical_expression point_ae OR logical_expression point_ae
    (39) logical_expression -> . LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS
    (40) relational_expression -> . arithmetic_expression point_ae GREATER arithmetic_expression point_ae
    (41) relational_expression -> . arithmetic_expression point_ae LESSER arithmetic_expression point_ae
    (42) relational_expression -> . arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae
    (43) relational_expression -> . arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae
    (44) relational_expression -> . arithmetic_expression point_ae EQUAL arithmetic_expression point_ae
    (45) relational_expression -> . STRING EQUAL STRING
    (46) relational_expression -> . LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS
    (47) relational_expression -> . BOOLEAN
    (48) arithmetic_expression -> . arithmetic_expression point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> . arithmetic_expression point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> . arithmetic_expression point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> . arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae
    (52) arithmetic_expression -> . LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS
    (53) arithmetic_expression -> . expression_id
    (54) arithmetic_expression -> . INTEGER
    (55) arithmetic_expression -> . NUMBER
    (56) expression_id -> . ID

    STRING          shift and go to state 52
    LEFTPARENTHESIS shift and go to state 46
    BOOLEAN         shift and go to state 53
    INTEGER         shift and go to state 54
    NUMBER          shift and go to state 55
    ID              shift and go to state 56

    expression                     shift and go to state 137
    logical_expression             shift and go to state 48
    relational_expression          shift and go to state 49
    arithmetic_expression          shift and go to state 50
    expression_id                  shift and go to state 51

state 120

    (37) logical_expression -> logical_expression point_ae AND logical_expression point_ae .
    (37) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (38) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHTPARENTHESIS reduce using rule 37 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .)
    SEMICOLON       reduce using rule 37 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .)
    AND             shift and go to state 81
    OR              shift and go to state 82

  ! AND             [ reduce using rule 37 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .) ]
  ! OR              [ reduce using rule 37 (logical_expression -> logical_expression point_ae AND logical_expression point_ae .) ]


state 121

    (38) logical_expression -> logical_expression point_ae OR logical_expression point_ae .
    (37) logical_expression -> logical_expression point_ae . AND logical_expression point_ae
    (38) logical_expression -> logical_expression point_ae . OR logical_expression point_ae

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RIGHTPARENTHESIS reduce using rule 38 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .)
    SEMICOLON       reduce using rule 38 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .)
    AND             shift and go to state 81
    OR              shift and go to state 82

  ! AND             [ reduce using rule 38 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .) ]
  ! OR              [ reduce using rule 38 (logical_expression -> logical_expression point_ae OR logical_expression point_ae .) ]


state 122

    (35) logical_expression -> relational_expression point_ae AND relational_expression point_ae .

    AND             reduce using rule 35 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    OR              reduce using rule 35 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 35 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)
    SEMICOLON       reduce using rule 35 (logical_expression -> relational_expression point_ae AND relational_expression point_ae .)


state 123

    (46) relational_expression -> LEFTPARENTHESIS relational_expression . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 78


state 124

    (36) logical_expression -> relational_expression point_ae OR relational_expression point_ae .

    AND             reduce using rule 36 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    OR              reduce using rule 36 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 36 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)
    SEMICOLON       reduce using rule 36 (logical_expression -> relational_expression point_ae OR relational_expression point_ae .)


state 125

    (40) relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 40 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    OR              reduce using rule 40 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 40 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 40 (relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 126

    (52) arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression . RIGHTPARENTHESIS
    (48) arithmetic_expression -> arithmetic_expression . point_ae PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression . point_ae MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression . point_ae TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression . point_ae DIVIDE arithmetic_expression point_ae
    (58) point_ae -> .

    RIGHTPARENTHESIS shift and go to state 79
    PLUS            reduce using rule 58 (point_ae -> .)
    MINUS           reduce using rule 58 (point_ae -> .)
    TIMES           reduce using rule 58 (point_ae -> .)
    DIVIDE          reduce using rule 58 (point_ae -> .)

    point_ae                       shift and go to state 138

state 127

    (41) relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 41 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    OR              reduce using rule 41 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 41 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 41 (relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 128

    (42) relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 42 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 42 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 42 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 42 (relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 129

    (43) relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 43 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 43 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 43 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 43 (relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 130

    (44) relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    AND             reduce using rule 44 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    OR              reduce using rule 44 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 44 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 44 (relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 131

    (48) arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    LESSER          reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    EQUAL           reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    AND             reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    OR              reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93

  ! PLUS            [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae .) ]


state 132

    (49) arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    LESSER          reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    EQUAL           reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    AND             reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    OR              reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93

  ! PLUS            [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae .) ]


state 133

    (50) arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    LESSER          reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    EQUAL           reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    AND             reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    OR              reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93

  ! PLUS            [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae .) ]


state 134

    (51) arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .
    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    GREATER         reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    LESSER          reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    GREATEREQUAL    reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    LESSEREQUAL     reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    EQUAL           reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    RIGHTPARENTHESIS reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    SEMICOLON       reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    AND             reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    OR              reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93

  ! PLUS            [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! MINUS           [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! TIMES           [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]
  ! DIVIDE          [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae .) ]


state 135

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET . statement RIGHTBRACKET point_if_then_end elsestatement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 139
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 136

    (25) whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 140
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 137

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression . SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    SEMICOLON       shift and go to state 141


state 138

    (48) arithmetic_expression -> arithmetic_expression point_ae . PLUS arithmetic_expression point_ae
    (49) arithmetic_expression -> arithmetic_expression point_ae . MINUS arithmetic_expression point_ae
    (50) arithmetic_expression -> arithmetic_expression point_ae . TIMES arithmetic_expression point_ae
    (51) arithmetic_expression -> arithmetic_expression point_ae . DIVIDE arithmetic_expression point_ae

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 139

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement . RIGHTBRACKET point_if_then_end elsestatement
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 142
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 140

    (25) whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 25 (whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET .)


state 141

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON . ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    ID              shift and go to state 143


state 142

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET . point_if_then_end elsestatement
    (60) point_if_then_end -> .

    ELSE            reduce using rule 60 (point_if_then_end -> .)
    END             reduce using rule 60 (point_if_then_end -> .)
    WRITE           reduce using rule 60 (point_if_then_end -> .)
    ID              reduce using rule 60 (point_if_then_end -> .)
    IF              reduce using rule 60 (point_if_then_end -> .)
    WHILE           reduce using rule 60 (point_if_then_end -> .)
    FOR             reduce using rule 60 (point_if_then_end -> .)
    RIGHTBRACKET    reduce using rule 60 (point_if_then_end -> .)

    point_if_then_end              shift and go to state 144

state 143

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID . increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET
    (27) increment_decrement -> . PLUSPLUS
    (28) increment_decrement -> . MINUSMINUS

    PLUSPLUS        shift and go to state 146
    MINUSMINUS      shift and go to state 147

    increment_decrement            shift and go to state 145

state 144

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end . elsestatement
    (23) elsestatement -> . ELSE LEFTBRACKET statement RIGHTBRACKET
    (24) elsestatement -> .

    ELSE            shift and go to state 149
    END             reduce using rule 24 (elsestatement -> .)
    WRITE           reduce using rule 24 (elsestatement -> .)
    ID              reduce using rule 24 (elsestatement -> .)
    IF              reduce using rule 24 (elsestatement -> .)
    WHILE           reduce using rule 24 (elsestatement -> .)
    FOR             reduce using rule 24 (elsestatement -> .)
    RIGHTBRACKET    reduce using rule 24 (elsestatement -> .)

    elsestatement                  shift and go to state 148

state 145

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement . RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTPARENTHESIS shift and go to state 150


state 146

    (27) increment_decrement -> PLUSPLUS .

    RIGHTPARENTHESIS reduce using rule 27 (increment_decrement -> PLUSPLUS .)


state 147

    (28) increment_decrement -> MINUSMINUS .

    RIGHTPARENTHESIS reduce using rule 28 (increment_decrement -> MINUSMINUS .)


state 148

    (22) ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .

    END             reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    WRITE           reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    ID              reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    IF              reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    WHILE           reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    FOR             reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)
    RIGHTBRACKET    reduce using rule 22 (ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement .)


state 149

    (23) elsestatement -> ELSE . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 151


state 150

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS . LEFTBRACKET statement RIGHTBRACKET

    LEFTBRACKET     shift and go to state 152


state 151

    (23) elsestatement -> ELSE LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 153
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 152

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET . statement RIGHTBRACKET
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 154
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 153

    (23) elsestatement -> ELSE LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 155
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 154

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement . RIGHTBRACKET
    (17) statement -> statement . statement
    (12) statement -> . writestatement
    (13) statement -> . assignstatement
    (14) statement -> . ifstatement
    (15) statement -> . whileloop
    (16) statement -> . forloop
    (17) statement -> . statement statement
    (18) writestatement -> . WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON
    (19) assignstatement -> . ID ASSIGN expression point_ae SEMICOLON
    (20) assignstatement -> . ID PLUSPLUS SEMICOLON
    (21) assignstatement -> . ID MINUSMINUS SEMICOLON
    (22) ifstatement -> . IF LEFTPARENTHESIS expression RIGHTPARENTHESIS point_if_then_ini THEN LEFTBRACKET statement RIGHTBRACKET point_if_then_end elsestatement
    (25) whileloop -> . WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET
    (26) forloop -> . FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 156
    WRITE           shift and go to state 24
    ID              shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28

    statement                      shift and go to state 35
    writestatement                 shift and go to state 19
    assignstatement                shift and go to state 20
    ifstatement                    shift and go to state 21
    whileloop                      shift and go to state 22
    forloop                        shift and go to state 23

state 155

    (23) elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 23 (elsestatement -> ELSE LEFTBRACKET statement RIGHTBRACKET .)


state 156

    (26) forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .

    END             reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    WRITE           reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    ID              reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    IF              reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    WHILE           reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    FOR             reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 26 (forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 34 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for IF in state 35 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 35 resolved as shift
WARNING: shift/reduce conflict for FOR in state 35 resolved as shift
WARNING: shift/reduce conflict for RIGHTPARENTHESIS in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 131 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (expression -> relational_expression)
WARNING: rejected rule (logical_expression -> relational_expression) in state 49
WARNING: reduce/reduce conflict in state 49 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 49
WARNING: reduce/reduce conflict in state 51 resolved using rule (expression -> expression_id)
WARNING: rejected rule (arithmetic_expression -> expression_id) in state 51
WARNING: reduce/reduce conflict in state 64 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 101 resolved using rule (logical_expression -> relational_expression)
WARNING: rejected rule (point_ae -> <empty>) in state 101
