
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BEGIN BOOL BOOLEAN COLON COMMA DIVIDE DO ELSE END EQUAL FOR GREATER GREATEREQUAL ID IF INT INTEGER LEFTBRACKET LEFTPARENTHESIS LESSER LESSEREQUAL MINUS MINUSMINUS NUMBER OR PLUS PLUSPLUS PROGRAM REAL RIGHTBRACKET RIGHTPARENTHESIS SEMICOLON STR STRING THEN TIMES VAR WHILE WRITE\n  Program : PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET\n  \n  Program : PROGRAM ID LEFTBRACKET block RIGHTBRACKET\n  \n  variable : VAR variables COLON datatype SEMICOLON\n  \n  variable : variable variable\n  \n  variables : ID\n  \n  variables : variables COMMA variables\n  \n  datatype : INT\n           | REAL\n           | BOOL\n           | STR\n  \n  block : BEGIN SEMICOLON statement END SEMICOLON\n  \n  statement : writestatement\n            | assignstatement\n            | ifstatement\n            | whileloop\n            | forloop\n  \n  statement : statement statement\n  \n  writestatement : WRITE LEFTPARENTHESIS expression RIGHTPARENTHESIS SEMICOLON\n  \n  assignstatement : ID ASSIGN expression SEMICOLON\n  \n  assignstatement : ID PLUSPLUS SEMICOLON\n                  | ID MINUSMINUS SEMICOLON\n  \n  ifstatement : IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET\n  \n  ifstatement : IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET ELSE LEFTBRACKET statement RIGHTBRACKET\n  \n  whileloop : WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET\n  \n  forloop : FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET\n  \n  increment_decrement : PLUSPLUS\n                      | MINUSMINUS\n  \n  expression : logical_expression \n             | relational_expression \n             | arithmetic_expression \n  \n  expression : ID\n             | STRING\n  \n  logical_expression : relational_expression AND relational_expression\n                     | relational_expression OR relational_expression\n  \n  logical_expression : LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS\n  \n  relational_expression : arithmetic_expression GREATER arithmetic_expression\n                        | arithmetic_expression LESSER arithmetic_expression\n                        | arithmetic_expression GREATEREQUAL arithmetic_expression\n                        | arithmetic_expression LESSEREQUAL arithmetic_expression\n                        | arithmetic_expression EQUAL arithmetic_expression\n  \n  relational_expression : STRING EQUAL STRING\n  \n  relational_expression : LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS\n  \n  relational_expression : BOOLEAN\n  \n  arithmetic_expression : arithmetic_expression PLUS arithmetic_expression\n                        | arithmetic_expression MINUS arithmetic_expression\n                        | arithmetic_expression TIMES arithmetic_expression\n                        | arithmetic_expression DIVIDE arithmetic_expression\n  \n  arithmetic_expression : LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS\n  \n  arithmetic_expression : ID\n                        | INTEGER\n                        | NUMBER\n  \n  empty :\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,11,15,],[0,-2,-1,]),'ID':([2,7,14,17,18,19,20,21,22,23,35,37,38,41,42,43,46,57,58,68,69,70,71,72,73,74,75,76,77,78,80,83,87,90,93,108,109,110,111,112,114,115,116,119,123,125,126,127,128,],[3,13,25,13,25,-12,-13,-14,-15,-16,25,51,51,51,51,61,66,-20,-21,66,66,66,66,66,66,66,66,66,66,66,-19,51,-18,66,66,25,25,51,25,25,-22,-24,118,25,25,-23,25,25,-25,]),'LEFTBRACKET':([3,103,104,117,124,],[4,108,109,119,126,]),'VAR':([4,5,9,44,],[7,7,7,-3,]),'BEGIN':([4,5,9,44,],[8,8,-4,-3,]),'RIGHTBRACKET':([6,10,19,20,21,22,23,35,45,57,58,80,87,111,112,114,115,123,125,127,128,],[11,15,-12,-13,-14,-15,-16,-17,-11,-20,-21,-19,-18,114,115,-22,-24,125,-23,128,-25,]),'SEMICOLON':([8,29,30,31,32,33,36,39,40,48,49,50,51,52,53,54,55,56,66,67,84,85,86,88,91,92,94,95,96,97,98,99,100,101,102,105,113,],[14,44,-7,-8,-9,-10,45,57,58,-28,-29,-30,-31,-32,-43,-50,-51,80,-49,87,-35,-42,-48,-33,-34,-36,-37,-38,-39,-40,-44,-45,-46,-47,-41,110,116,]),'COLON':([12,13,34,],[16,-5,-6,]),'COMMA':([12,13,34,],[17,-5,17,]),'WRITE':([14,18,19,20,21,22,23,35,57,58,80,87,108,109,111,112,114,115,119,123,125,126,127,128,],[24,24,-12,-13,-14,-15,-16,24,-20,-21,-19,-18,24,24,24,24,-22,-24,24,24,-23,24,24,-25,]),'IF':([14,18,19,20,21,22,23,35,57,58,80,87,108,109,111,112,114,115,119,123,125,126,127,128,],[26,26,-12,-13,-14,-15,-16,26,-20,-21,-19,-18,26,26,26,26,-22,-24,26,26,-23,26,26,-25,]),'WHILE':([14,18,19,20,21,22,23,35,57,58,80,87,108,109,111,112,114,115,119,123,125,126,127,128,],[27,27,-12,-13,-14,-15,-16,27,-20,-21,-19,-18,27,27,27,27,-22,-24,27,27,-23,27,27,-25,]),'FOR':([14,18,19,20,21,22,23,35,57,58,80,87,108,109,111,112,114,115,119,123,125,126,127,128,],[28,28,-12,-13,-14,-15,-16,28,-20,-21,-19,-18,28,28,28,28,-22,-24,28,28,-23,28,28,-25,]),'INT':([16,],[30,]),'REAL':([16,],[31,]),'BOOL':([16,],[32,]),'STR':([16,],[33,]),'END':([18,19,20,21,22,23,35,57,58,80,87,114,115,125,128,],[36,-12,-13,-14,-15,-16,-17,-20,-21,-19,-18,-22,-24,-23,-25,]),'LEFTPARENTHESIS':([24,26,27,28,37,38,41,42,46,68,69,70,71,72,73,74,75,76,77,78,83,90,93,110,],[37,41,42,43,46,46,46,46,46,90,90,93,93,93,93,93,93,93,93,93,46,90,93,46,]),'ASSIGN':([25,61,],[38,83,]),'PLUSPLUS':([25,118,],[39,121,]),'MINUSMINUS':([25,118,],[40,122,]),'STRING':([37,38,41,42,46,68,69,79,83,90,110,],[52,52,52,52,65,65,65,102,52,65,52,]),'BOOLEAN':([37,38,41,42,46,68,69,83,90,110,],[53,53,53,53,53,53,53,53,53,53,]),'INTEGER':([37,38,41,42,46,68,69,70,71,72,73,74,75,76,77,78,83,90,93,110,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NUMBER':([37,38,41,42,46,68,69,70,71,72,73,74,75,76,77,78,83,90,93,110,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RIGHTPARENTHESIS':([47,48,49,50,51,52,53,54,55,59,60,62,63,64,66,84,85,86,88,91,92,94,95,96,97,98,99,100,101,102,106,107,120,121,122,],[67,-28,-29,-30,-31,-32,-43,-50,-51,81,82,84,85,86,-49,-35,-42,-48,-33,-34,-36,-37,-38,-39,-40,-44,-45,-46,-47,-41,85,86,124,-26,-27,]),'AND':([49,53,54,55,63,66,85,86,92,94,95,96,97,98,99,100,101,102,],[68,-43,-50,-51,68,-49,-42,-48,-36,-37,-38,-39,-40,-44,-45,-46,-47,-41,]),'OR':([49,53,54,55,63,66,85,86,92,94,95,96,97,98,99,100,101,102,],[69,-43,-50,-51,69,-49,-42,-48,-36,-37,-38,-39,-40,-44,-45,-46,-47,-41,]),'GREATER':([50,51,54,55,64,66,86,89,98,99,100,101,],[70,-49,-50,-51,70,-49,-48,70,-44,-45,-46,-47,]),'LESSER':([50,51,54,55,64,66,86,89,98,99,100,101,],[71,-49,-50,-51,71,-49,-48,71,-44,-45,-46,-47,]),'GREATEREQUAL':([50,51,54,55,64,66,86,89,98,99,100,101,],[72,-49,-50,-51,72,-49,-48,72,-44,-45,-46,-47,]),'LESSEREQUAL':([50,51,54,55,64,66,86,89,98,99,100,101,],[73,-49,-50,-51,73,-49,-48,73,-44,-45,-46,-47,]),'EQUAL':([50,51,52,54,55,64,65,66,86,89,98,99,100,101,],[74,-49,79,-50,-51,74,79,-49,-48,74,-44,-45,-46,-47,]),'PLUS':([50,51,54,55,64,66,86,89,92,94,95,96,97,98,99,100,101,107,],[75,-49,-50,-51,75,-49,-48,75,75,75,75,75,75,75,75,75,75,75,]),'MINUS':([50,51,54,55,64,66,86,89,92,94,95,96,97,98,99,100,101,107,],[76,-49,-50,-51,76,-49,-48,76,76,76,76,76,76,76,76,76,76,76,]),'TIMES':([50,51,54,55,64,66,86,89,92,94,95,96,97,98,99,100,101,107,],[77,-49,-50,-51,77,-49,-48,77,77,77,77,77,77,77,77,77,77,77,]),'DIVIDE':([50,51,54,55,64,66,86,89,92,94,95,96,97,98,99,100,101,107,],[78,-49,-50,-51,78,-49,-48,78,78,78,78,78,78,78,78,78,78,78,]),'THEN':([81,],[103,]),'DO':([82,],[104,]),'ELSE':([114,],[117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'variable':([4,5,9,],[5,9,9,]),'block':([4,5,],[6,10,]),'variables':([7,17,],[12,34,]),'statement':([14,18,35,108,109,111,112,119,123,126,127,],[18,35,35,111,112,35,35,123,35,127,35,]),'writestatement':([14,18,35,108,109,111,112,119,123,126,127,],[19,19,19,19,19,19,19,19,19,19,19,]),'assignstatement':([14,18,35,108,109,111,112,119,123,126,127,],[20,20,20,20,20,20,20,20,20,20,20,]),'ifstatement':([14,18,35,108,109,111,112,119,123,126,127,],[21,21,21,21,21,21,21,21,21,21,21,]),'whileloop':([14,18,35,108,109,111,112,119,123,126,127,],[22,22,22,22,22,22,22,22,22,22,22,]),'forloop':([14,18,35,108,109,111,112,119,123,126,127,],[23,23,23,23,23,23,23,23,23,23,23,]),'datatype':([16,],[29,]),'expression':([37,38,41,42,83,110,],[47,56,59,60,105,113,]),'logical_expression':([37,38,41,42,46,83,110,],[48,48,48,48,62,48,48,]),'relational_expression':([37,38,41,42,46,68,69,83,90,110,],[49,49,49,49,63,88,91,49,106,49,]),'arithmetic_expression':([37,38,41,42,46,68,69,70,71,72,73,74,75,76,77,78,83,90,93,110,],[50,50,50,50,64,89,89,92,94,95,96,97,98,99,100,101,50,64,107,50,]),'increment_decrement':([118,],[120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET','Program',6,'p_program','Parser.py',26),
  ('Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET','Program',5,'p_program_without_vars','Parser.py',34),
  ('variable -> VAR variables COLON datatype SEMICOLON','variable',5,'p_variable','Parser.py',42),
  ('variable -> variable variable','variable',2,'p_variable_repetition','Parser.py',51),
  ('variables -> ID','variables',1,'p_variables','Parser.py',69),
  ('variables -> variables COMMA variables','variables',3,'p_variables_repetition','Parser.py',77),
  ('datatype -> INT','datatype',1,'p_datatype','Parser.py',85),
  ('datatype -> REAL','datatype',1,'p_datatype','Parser.py',86),
  ('datatype -> BOOL','datatype',1,'p_datatype','Parser.py',87),
  ('datatype -> STR','datatype',1,'p_datatype','Parser.py',88),
  ('block -> BEGIN SEMICOLON statement END SEMICOLON','block',5,'p_block','Parser.py',96),
  ('statement -> writestatement','statement',1,'p_statement','Parser.py',104),
  ('statement -> assignstatement','statement',1,'p_statement','Parser.py',105),
  ('statement -> ifstatement','statement',1,'p_statement','Parser.py',106),
  ('statement -> whileloop','statement',1,'p_statement','Parser.py',107),
  ('statement -> forloop','statement',1,'p_statement','Parser.py',108),
  ('statement -> statement statement','statement',2,'p_statements','Parser.py',116),
  ('writestatement -> WRITE LEFTPARENTHESIS expression RIGHTPARENTHESIS SEMICOLON','writestatement',5,'p_writestatement','Parser.py',139),
  ('assignstatement -> ID ASSIGN expression SEMICOLON','assignstatement',4,'p_assignstatement_classic','Parser.py',147),
  ('assignstatement -> ID PLUSPLUS SEMICOLON','assignstatement',3,'p_assignstatement_increment_decrement','Parser.py',155),
  ('assignstatement -> ID MINUSMINUS SEMICOLON','assignstatement',3,'p_assignstatement_increment_decrement','Parser.py',156),
  ('ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET','ifstatement',8,'p_ifstatement','Parser.py',164),
  ('ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET ELSE LEFTBRACKET statement RIGHTBRACKET','ifstatement',12,'p_if_else_statement','Parser.py',172),
  ('whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET','whileloop',8,'p_whileloop','Parser.py',180),
  ('forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET','forloop',14,'p_forloop','Parser.py',188),
  ('increment_decrement -> PLUSPLUS','increment_decrement',1,'p_increment_decrement','Parser.py',197),
  ('increment_decrement -> MINUSMINUS','increment_decrement',1,'p_increment_decrement','Parser.py',198),
  ('expression -> logical_expression','expression',1,'p_expression','Parser.py',206),
  ('expression -> relational_expression','expression',1,'p_expression','Parser.py',207),
  ('expression -> arithmetic_expression','expression',1,'p_expression','Parser.py',208),
  ('expression -> ID','expression',1,'p_expression_unit','Parser.py',215),
  ('expression -> STRING','expression',1,'p_expression_unit','Parser.py',216),
  ('logical_expression -> relational_expression AND relational_expression','logical_expression',3,'p_logical_expression','Parser.py',224),
  ('logical_expression -> relational_expression OR relational_expression','logical_expression',3,'p_logical_expression','Parser.py',225),
  ('logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS','logical_expression',3,'p_logical_expression_parenthesis','Parser.py',233),
  ('relational_expression -> arithmetic_expression GREATER arithmetic_expression','relational_expression',3,'p_relational_expression','Parser.py',241),
  ('relational_expression -> arithmetic_expression LESSER arithmetic_expression','relational_expression',3,'p_relational_expression','Parser.py',242),
  ('relational_expression -> arithmetic_expression GREATEREQUAL arithmetic_expression','relational_expression',3,'p_relational_expression','Parser.py',243),
  ('relational_expression -> arithmetic_expression LESSEREQUAL arithmetic_expression','relational_expression',3,'p_relational_expression','Parser.py',244),
  ('relational_expression -> arithmetic_expression EQUAL arithmetic_expression','relational_expression',3,'p_relational_expression','Parser.py',245),
  ('relational_expression -> STRING EQUAL STRING','relational_expression',3,'p_relational_expression_string','Parser.py',253),
  ('relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS','relational_expression',3,'p_relational_expression_parenthesis','Parser.py',261),
  ('relational_expression -> BOOLEAN','relational_expression',1,'p_relational_expression_unit','Parser.py',269),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',277),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',278),
  ('arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',279),
  ('arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','Parser.py',280),
  ('arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS','arithmetic_expression',3,'p_arithmetic_expression_parenthesis','Parser.py',288),
  ('arithmetic_expression -> ID','arithmetic_expression',1,'p_arithmetic_expression_modifier','Parser.py',296),
  ('arithmetic_expression -> INTEGER','arithmetic_expression',1,'p_arithmetic_expression_modifier','Parser.py',297),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression_modifier','Parser.py',298),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',305),
]
