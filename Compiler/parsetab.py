
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BEGIN BOOL BOOLEAN COLON COMMA DIVIDE DO ELSE END EQUAL FOR GREATER GREATEREQUAL ID IF INT INTEGER LEFTBRACKET LEFTPARENTHESIS LESSER LESSEREQUAL MINUS MINUSMINUS NUMBER OR PLUS PLUSPLUS PROGRAM REAL RIGHTBRACKET RIGHTPARENTHESIS SEMICOLON STR STRING THEN TIMES VAR WHILE WRITE\n  Program : PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET\n  \n  Program : PROGRAM ID LEFTBRACKET block RIGHTBRACKET\n  \n  variable : VAR variables COLON datatype SEMICOLON\n  \n  variable : variable variable\n  \n  variables : ID\n  \n  variables : variables COMMA variables\n  \n  datatype : INT\n           | REAL\n           | BOOL\n           | STR\n  \n  block : BEGIN SEMICOLON statement END SEMICOLON\n  \n  statement : writestatement\n            | assignstatement\n            | ifstatement\n            | whileloop\n            | forloop\n  \n  statement : statement statement\n  \n  writestatement : WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON\n  \n  assignstatement : ID ASSIGN expression point_ae SEMICOLON\n  \n  assignstatement : ID PLUSPLUS SEMICOLON\n                  | ID MINUSMINUS SEMICOLON\n  \n  ifstatement : IF LEFTPARENTHESIS expression RIGHTPARENTHESIS  THEN LEFTBRACKET statement RIGHTBRACKET \n  \n  ifstatement : IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET ELSE LEFTBRACKET statement RIGHTBRACKET\n  \n  whileloop : WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET\n  \n  forloop : FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET\n  \n  increment_decrement : PLUSPLUS\n                      | MINUSMINUS\n  \n  expression : logical_expression \n             | relational_expression \n             | arithmetic_expression \n             | expression_id\n  \n  expression : STRING\n  \n  logical_expression : relational_expression \n  \n  logical_expression : relational_expression point_ae AND relational_expression point_ae\n                     | relational_expression point_ae OR relational_expression point_ae\n                     | logical_expression point_ae AND logical_expression point_ae\n                     | logical_expression point_ae OR logical_expression point_ae\n  \n  logical_expression : LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS\n  \n  relational_expression : arithmetic_expression point_ae GREATER arithmetic_expression point_ae\n                        | arithmetic_expression point_ae LESSER arithmetic_expression point_ae\n                        | arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae\n                        | arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae\n                        | arithmetic_expression point_ae EQUAL arithmetic_expression point_ae\n  \n  relational_expression : STRING EQUAL STRING\n  \n  relational_expression : LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS\n  \n  relational_expression : BOOLEAN\n  \n  arithmetic_expression : arithmetic_expression point_ae PLUS arithmetic_expression point_ae\n                        | arithmetic_expression point_ae MINUS arithmetic_expression point_ae\n                        | arithmetic_expression point_ae TIMES arithmetic_expression point_ae\n                        | arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae\n  \n  arithmetic_expression : LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS\n  \n  arithmetic_expression : expression_id\n  \n  arithmetic_expression : INTEGER\n  \n  arithmetic_expression : NUMBER\n  \n  expression_id : ID\n  \n  empty :\n  \n  point_ae : \n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,11,15,],[0,-2,-1,]),'ID':([2,7,14,17,18,19,20,21,22,23,35,37,38,41,42,43,46,58,59,76,81,82,83,84,85,86,87,88,89,90,91,92,93,95,99,105,108,117,118,119,135,136,139,140,141,144,148,150,151,152,153,],[3,13,25,13,25,-12,-13,-14,-15,-16,25,56,56,56,56,62,56,-20,-21,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-19,-18,56,56,25,25,56,25,25,-22,-24,143,25,25,-23,25,25,-25,]),'LEFTBRACKET':([3,96,97,142,149,],[4,117,118,144,151,]),'VAR':([4,5,9,44,],[7,7,7,-3,]),'BEGIN':([4,5,9,44,],[8,8,-4,-3,]),'RIGHTBRACKET':([6,10,19,20,21,22,23,35,45,58,59,95,99,135,136,139,140,148,150,152,153,],[11,15,-12,-13,-14,-15,-16,-17,-11,-20,-21,-19,-18,139,140,-22,-24,150,-23,153,-25,]),'SEMICOLON':([8,29,30,31,32,33,36,39,40,48,49,50,51,52,53,54,55,56,57,67,73,77,78,79,80,94,98,100,101,103,104,106,107,109,110,111,112,113,114,115,116,120,121,122,124,125,127,128,129,130,131,132,133,134,137,],[14,44,-7,-8,-9,-10,45,58,59,-28,-29,-30,-31,-32,-46,-53,-54,-55,-57,-52,95,-38,-45,-51,99,-44,119,-57,-33,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-36,-37,-34,-35,-39,-40,-41,-42,-43,-47,-48,-49,-50,141,]),'COLON':([12,13,34,],[16,-5,-6,]),'COMMA':([12,13,34,],[17,-5,17,]),'WRITE':([14,18,19,20,21,22,23,35,58,59,95,99,117,118,135,136,139,140,144,148,150,151,152,153,],[24,24,-12,-13,-14,-15,-16,24,-20,-21,-19,-18,24,24,24,24,-22,-24,24,24,-23,24,24,-25,]),'IF':([14,18,19,20,21,22,23,35,58,59,95,99,117,118,135,136,139,140,144,148,150,151,152,153,],[26,26,-12,-13,-14,-15,-16,26,-20,-21,-19,-18,26,26,26,26,-22,-24,26,26,-23,26,26,-25,]),'WHILE':([14,18,19,20,21,22,23,35,58,59,95,99,117,118,135,136,139,140,144,148,150,151,152,153,],[27,27,-12,-13,-14,-15,-16,27,-20,-21,-19,-18,27,27,27,27,-22,-24,27,27,-23,27,27,-25,]),'FOR':([14,18,19,20,21,22,23,35,58,59,95,99,117,118,135,136,139,140,144,148,150,151,152,153,],[28,28,-12,-13,-14,-15,-16,28,-20,-21,-19,-18,28,28,28,28,-22,-24,28,28,-23,28,28,-25,]),'INT':([16,],[30,]),'REAL':([16,],[31,]),'BOOL':([16,],[32,]),'STR':([16,],[33,]),'END':([18,19,20,21,22,23,35,58,59,95,99,139,140,150,153,],[36,-12,-13,-14,-15,-16,-17,-20,-21,-19,-18,-22,-24,-23,-25,]),'LEFTPARENTHESIS':([24,26,27,28,37,38,41,42,46,76,81,82,83,84,85,86,87,88,89,90,91,92,93,105,108,119,],[37,41,42,43,46,46,46,46,46,46,46,46,105,105,108,108,108,108,108,108,108,108,108,105,108,46,]),'ASSIGN':([25,62,],[38,76,]),'PLUSPLUS':([25,143,],[39,146,]),'MINUSMINUS':([25,143,],[40,147,]),'STRING':([37,38,41,42,46,72,76,81,82,83,84,105,119,],[52,52,52,52,66,94,52,66,66,66,66,66,52,]),'BOOLEAN':([37,38,41,42,46,76,81,82,83,84,105,119,],[53,53,53,53,53,53,53,53,53,53,53,53,]),'INTEGER':([37,38,41,42,46,76,81,82,83,84,85,86,87,88,89,90,91,92,93,105,108,119,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NUMBER':([37,38,41,42,46,76,81,82,83,84,85,86,87,88,89,90,91,92,93,105,108,119,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RIGHTPARENTHESIS':([47,48,49,50,51,52,53,54,55,56,60,61,63,64,65,67,68,77,78,79,94,100,101,103,104,106,107,109,110,111,112,113,114,115,116,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,145,146,147,],[-57,-28,-29,-30,-31,-32,-46,-53,-54,-55,74,75,77,78,79,-52,80,-38,-45,-51,-44,-57,-33,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-36,-37,-34,78,-35,-39,79,-40,-41,-42,-43,-47,-48,-49,-50,149,-26,-27,]),'AND':([48,49,53,54,55,56,63,64,67,69,70,77,78,79,94,100,101,103,104,106,107,109,110,111,112,113,114,115,116,120,121,122,124,125,127,128,129,130,131,132,133,134,],[-57,-33,-46,-53,-54,-55,-57,-33,-52,81,83,-38,-45,-51,-44,-57,-33,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,81,81,-34,-35,-39,-40,-41,-42,-43,-47,-48,-49,-50,]),'OR':([48,49,53,54,55,56,63,64,67,69,70,77,78,79,94,100,101,103,104,106,107,109,110,111,112,113,114,115,116,120,121,122,124,125,127,128,129,130,131,132,133,134,],[-57,-33,-46,-53,-54,-55,-57,-33,-52,82,84,-38,-45,-51,-44,-57,-33,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,82,82,-34,-35,-39,-40,-41,-42,-43,-47,-48,-49,-50,]),'GREATER':([50,51,54,55,56,65,67,71,79,102,113,114,115,116,131,132,133,134,],[-57,-52,-53,-54,-55,-57,-52,85,-51,-57,-57,-57,-57,-57,-47,-48,-49,-50,]),'LESSER':([50,51,54,55,56,65,67,71,79,102,113,114,115,116,131,132,133,134,],[-57,-52,-53,-54,-55,-57,-52,86,-51,-57,-57,-57,-57,-57,-47,-48,-49,-50,]),'GREATEREQUAL':([50,51,54,55,56,65,67,71,79,102,113,114,115,116,131,132,133,134,],[-57,-52,-53,-54,-55,-57,-52,87,-51,-57,-57,-57,-57,-57,-47,-48,-49,-50,]),'LESSEREQUAL':([50,51,54,55,56,65,67,71,79,102,113,114,115,116,131,132,133,134,],[-57,-52,-53,-54,-55,-57,-52,88,-51,-57,-57,-57,-57,-57,-47,-48,-49,-50,]),'EQUAL':([50,51,52,54,55,56,65,66,67,71,79,102,113,114,115,116,131,132,133,134,],[-57,-52,72,-53,-54,-55,-57,72,-52,89,-51,-57,-57,-57,-57,-57,-47,-48,-49,-50,]),'PLUS':([50,51,54,55,56,65,67,71,79,102,107,109,110,111,112,113,114,115,116,125,126,127,128,129,130,131,132,133,134,138,],[-57,-52,-53,-54,-55,-57,-52,90,-51,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,90,-57,90,90,90,90,90,90,90,90,90,]),'MINUS':([50,51,54,55,56,65,67,71,79,102,107,109,110,111,112,113,114,115,116,125,126,127,128,129,130,131,132,133,134,138,],[-57,-52,-53,-54,-55,-57,-52,91,-51,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,91,-57,91,91,91,91,91,91,91,91,91,]),'TIMES':([50,51,54,55,56,65,67,71,79,102,107,109,110,111,112,113,114,115,116,125,126,127,128,129,130,131,132,133,134,138,],[-57,-52,-53,-54,-55,-57,-52,92,-51,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,92,-57,92,92,92,92,92,92,92,92,92,]),'DIVIDE':([50,51,54,55,56,65,67,71,79,102,107,109,110,111,112,113,114,115,116,125,126,127,128,129,130,131,132,133,134,138,],[-57,-52,-53,-54,-55,-57,-52,93,-51,-57,-57,-57,-57,-57,-57,-57,-57,-57,-57,93,-57,93,93,93,93,93,93,93,93,93,]),'THEN':([74,],[96,]),'DO':([75,],[97,]),'ELSE':([139,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'variable':([4,5,9,],[5,9,9,]),'block':([4,5,],[6,10,]),'variables':([7,17,],[12,34,]),'statement':([14,18,35,117,118,135,136,144,148,151,152,],[18,35,35,135,136,35,35,148,35,152,35,]),'writestatement':([14,18,35,117,118,135,136,144,148,151,152,],[19,19,19,19,19,19,19,19,19,19,19,]),'assignstatement':([14,18,35,117,118,135,136,144,148,151,152,],[20,20,20,20,20,20,20,20,20,20,20,]),'ifstatement':([14,18,35,117,118,135,136,144,148,151,152,],[21,21,21,21,21,21,21,21,21,21,21,]),'whileloop':([14,18,35,117,118,135,136,144,148,151,152,],[22,22,22,22,22,22,22,22,22,22,22,]),'forloop':([14,18,35,117,118,135,136,144,148,151,152,],[23,23,23,23,23,23,23,23,23,23,23,]),'datatype':([16,],[29,]),'expression':([37,38,41,42,76,119,],[47,57,60,61,98,137,]),'logical_expression':([37,38,41,42,46,76,81,82,119,],[48,48,48,48,63,48,100,103,48,]),'relational_expression':([37,38,41,42,46,76,81,82,83,84,105,119,],[49,49,49,49,64,49,101,101,104,106,123,49,]),'arithmetic_expression':([37,38,41,42,46,76,81,82,83,84,85,86,87,88,89,90,91,92,93,105,108,119,],[50,50,50,50,65,50,102,102,102,102,107,109,110,111,112,113,114,115,116,65,126,50,]),'expression_id':([37,38,41,42,46,76,81,82,83,84,85,86,87,88,89,90,91,92,93,105,108,119,],[51,51,51,51,67,51,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,51,]),'point_ae':([47,48,49,50,57,63,64,65,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,126,],[68,69,70,71,73,69,70,71,120,70,71,121,122,124,125,127,128,129,130,131,132,133,134,138,]),'increment_decrement':([143,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> PROGRAM ID LEFTBRACKET variable block RIGHTBRACKET','Program',6,'p_program','Parser.py',31),
  ('Program -> PROGRAM ID LEFTBRACKET block RIGHTBRACKET','Program',5,'p_program_without_vars','Parser.py',40),
  ('variable -> VAR variables COLON datatype SEMICOLON','variable',5,'p_variable','Parser.py',50),
  ('variable -> variable variable','variable',2,'p_variable_repetition','Parser.py',63),
  ('variables -> ID','variables',1,'p_variables','Parser.py',80),
  ('variables -> variables COMMA variables','variables',3,'p_variables_repetition','Parser.py',88),
  ('datatype -> INT','datatype',1,'p_datatype','Parser.py',97),
  ('datatype -> REAL','datatype',1,'p_datatype','Parser.py',98),
  ('datatype -> BOOL','datatype',1,'p_datatype','Parser.py',99),
  ('datatype -> STR','datatype',1,'p_datatype','Parser.py',100),
  ('block -> BEGIN SEMICOLON statement END SEMICOLON','block',5,'p_block','Parser.py',110),
  ('statement -> writestatement','statement',1,'p_statement','Parser.py',120),
  ('statement -> assignstatement','statement',1,'p_statement','Parser.py',121),
  ('statement -> ifstatement','statement',1,'p_statement','Parser.py',122),
  ('statement -> whileloop','statement',1,'p_statement','Parser.py',123),
  ('statement -> forloop','statement',1,'p_statement','Parser.py',124),
  ('statement -> statement statement','statement',2,'p_statements','Parser.py',132),
  ('writestatement -> WRITE LEFTPARENTHESIS expression point_ae RIGHTPARENTHESIS SEMICOLON','writestatement',6,'p_writestatement','Parser.py',151),
  ('assignstatement -> ID ASSIGN expression point_ae SEMICOLON','assignstatement',5,'p_assignstatement_classic','Parser.py',162),
  ('assignstatement -> ID PLUSPLUS SEMICOLON','assignstatement',3,'p_assignstatement_increment_decrement','Parser.py',176),
  ('assignstatement -> ID MINUSMINUS SEMICOLON','assignstatement',3,'p_assignstatement_increment_decrement','Parser.py',177),
  ('ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET','ifstatement',8,'p_ifstatement','Parser.py',194),
  ('ifstatement -> IF LEFTPARENTHESIS expression RIGHTPARENTHESIS THEN LEFTBRACKET statement RIGHTBRACKET ELSE LEFTBRACKET statement RIGHTBRACKET','ifstatement',12,'p_if_else_statement','Parser.py',207),
  ('whileloop -> WHILE LEFTPARENTHESIS expression RIGHTPARENTHESIS DO LEFTBRACKET statement RIGHTBRACKET','whileloop',8,'p_whileloop','Parser.py',218),
  ('forloop -> FOR LEFTPARENTHESIS ID ASSIGN expression SEMICOLON expression SEMICOLON ID increment_decrement RIGHTPARENTHESIS LEFTBRACKET statement RIGHTBRACKET','forloop',14,'p_forloop','Parser.py',229),
  ('increment_decrement -> PLUSPLUS','increment_decrement',1,'p_increment_decrement','Parser.py',239),
  ('increment_decrement -> MINUSMINUS','increment_decrement',1,'p_increment_decrement','Parser.py',240),
  ('expression -> logical_expression','expression',1,'p_expression','Parser.py',251),
  ('expression -> relational_expression','expression',1,'p_expression','Parser.py',252),
  ('expression -> arithmetic_expression','expression',1,'p_expression','Parser.py',253),
  ('expression -> expression_id','expression',1,'p_expression','Parser.py',254),
  ('expression -> STRING','expression',1,'p_expression_string','Parser.py',264),
  ('logical_expression -> relational_expression','logical_expression',1,'p_logical_expression_log2rel','Parser.py',277),
  ('logical_expression -> relational_expression point_ae AND relational_expression point_ae','logical_expression',5,'p_logical_expression','Parser.py',284),
  ('logical_expression -> relational_expression point_ae OR relational_expression point_ae','logical_expression',5,'p_logical_expression','Parser.py',285),
  ('logical_expression -> logical_expression point_ae AND logical_expression point_ae','logical_expression',5,'p_logical_expression','Parser.py',286),
  ('logical_expression -> logical_expression point_ae OR logical_expression point_ae','logical_expression',5,'p_logical_expression','Parser.py',287),
  ('logical_expression -> LEFTPARENTHESIS logical_expression RIGHTPARENTHESIS','logical_expression',3,'p_logical_expression_parenthesis','Parser.py',316),
  ('relational_expression -> arithmetic_expression point_ae GREATER arithmetic_expression point_ae','relational_expression',5,'p_relational_expression','Parser.py',326),
  ('relational_expression -> arithmetic_expression point_ae LESSER arithmetic_expression point_ae','relational_expression',5,'p_relational_expression','Parser.py',327),
  ('relational_expression -> arithmetic_expression point_ae GREATEREQUAL arithmetic_expression point_ae','relational_expression',5,'p_relational_expression','Parser.py',328),
  ('relational_expression -> arithmetic_expression point_ae LESSEREQUAL arithmetic_expression point_ae','relational_expression',5,'p_relational_expression','Parser.py',329),
  ('relational_expression -> arithmetic_expression point_ae EQUAL arithmetic_expression point_ae','relational_expression',5,'p_relational_expression','Parser.py',330),
  ('relational_expression -> STRING EQUAL STRING','relational_expression',3,'p_relational_expression_string','Parser.py',360),
  ('relational_expression -> LEFTPARENTHESIS relational_expression RIGHTPARENTHESIS','relational_expression',3,'p_relational_expression_parenthesis','Parser.py',378),
  ('relational_expression -> BOOLEAN','relational_expression',1,'p_relational_expression_unit','Parser.py',386),
  ('arithmetic_expression -> arithmetic_expression point_ae PLUS arithmetic_expression point_ae','arithmetic_expression',5,'p_arithmetic_expression','Parser.py',399),
  ('arithmetic_expression -> arithmetic_expression point_ae MINUS arithmetic_expression point_ae','arithmetic_expression',5,'p_arithmetic_expression','Parser.py',400),
  ('arithmetic_expression -> arithmetic_expression point_ae TIMES arithmetic_expression point_ae','arithmetic_expression',5,'p_arithmetic_expression','Parser.py',401),
  ('arithmetic_expression -> arithmetic_expression point_ae DIVIDE arithmetic_expression point_ae','arithmetic_expression',5,'p_arithmetic_expression','Parser.py',402),
  ('arithmetic_expression -> LEFTPARENTHESIS arithmetic_expression RIGHTPARENTHESIS','arithmetic_expression',3,'p_arithmetic_expression_parenthesis','Parser.py',436),
  ('arithmetic_expression -> expression_id','arithmetic_expression',1,'p_arithmetic_expression_id','Parser.py',444),
  ('arithmetic_expression -> INTEGER','arithmetic_expression',1,'p_arithmetic_expression_integer','Parser.py',451),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression_number','Parser.py',461),
  ('expression_id -> ID','expression_id',1,'p_expression_id','Parser.py',471),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',489),
  ('point_ae -> <empty>','point_ae',0,'p_point_ae','Parser.py',512),
]
